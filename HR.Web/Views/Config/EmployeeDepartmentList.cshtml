@model IEnumerable<HR.Web.Models.LookUp>

@{
    int offSet = Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["appTableOffSet"]);
    WebGrid grid = new WebGrid(Model, rowsPerPage: offSet, ajaxUpdateContainerId: "grid");
    grid.Pager(WebGridPagerModes.All);

}
<div class="page">
    <div class="page-wrap">
        <div class="panel panel-default">
            <div class="box" id="grid">
                <div class="box-header">
                    <h4>Employee Department</h4>
                    <div class="box-tools">
                        <button class="btn btn-info btn-raised waves-effect btn-sm" type="button" onclick="editEmpDepartment(-1);"><i class="fa fa-plus"></i> Add</button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            @grid.GetHtml(
                columns: grid.Columns(
                grid.Column("LookUpCode", "Employee Department Name", canSort: true),
                grid.Column("LookUpDescription", "Employee Department Description", canSort: true),
                @*grid.Column("IsActive", "Status",format:@<text><input type="checkbox" value="@item.IsActive" data-toggle="toggle"></text>),*@
                grid.Column("", "#Action", canSort: false, format: @<text><button class="btn btn-xs btn-raised waves-effect btn-sm" style="padding-left: 5px;margin-left: 6px;" onclick="editEmpDepartment(@item.LookUpID)"><i class="fa fa-pencil" style="padding-left: 5px;"></i></button></text>)),
                tableStyle: "table table-condensed table-bordered")
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div>@grid.PagerList(mode: WebGridPagerModes.All, paginationStyle: "pagination pagination-sm")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("SaveEmployeeDepartment", "Config", FormMethod.Post, new { id = "frm", name = "frm" }))
{
    <div id="myDepartmentModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Employee Department</h4>
                </div>
                <div class="modal-body" id="modalContent1">

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary btn-sm" onclick="SaveDepartment()"><i class="fa fa-floppy-o" aria-hidden="true"></i>Save</button>
                    <button type="button" class="btn btn-default btn-sm" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i>Close</button>
                </div>
            </div>

        </div>
    </div>
}
@section Scripts{
    <script type="text/javascript">
        $(function () {
            
            $('#li_Master').addClass('open');
            $('#li_empdepartment').addClass('active');
        });
        function editEmpDepartment(lookupID) {
            $.ajax({
                url: '@Url.Content("~/Config/GetEmployeeDepartment?lookupID=")' + lookupID,
                contentType: 'text/html',
                method: 'GET',
                success: function (data) {
                    $('#myDepartmentModal').modal('show');
                    $('#modalContent1').html('');
                    $('#modalContent1').html(data);
                },
                error: function (err) {

                }
            });
        }

        $('#frm').validate({
            rules: {
                LookUpCode: {
                    required: true,
                    maxlength:20
                },
                LookUpDescription: {
                    required: true,
                    maxlength:30
                }
            }
        });
        function SaveChanges() {
        if($('#frm').valid()){
            $('#frm').submit();
            }
      }

    </script>
}
<style>
    .Grid-Footer > td {
        padding-top: 10px;
        text-align: right;
        margin-bottom: 10px;
    }

        .Grid-Footer > td > a {
            background: #fff;
            display: inline-block;
            border-radius: 1px;
            padding: 6px 12px;
            font-size: 16px;
            cursor: pointer;
            border: 2px solid #eeeeee;
        }

            .Grid-Footer > td > a:hover {
                color: #3f51b5;
                text-decoration: none;
            }

.switch {
  position: relative;
  display: inline-block;
 width: 50px;
  height: 23px;
}

.switch input {display:none;}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
   height: 16px;
  width: 16px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
</style>


