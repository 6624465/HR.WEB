@model HR.Web.ViewModels.TravelClaimVm
@{
    ViewBag.Title = "TravelClaim";
}
@section Styles{
    <style>
        .multiselect-container {
            position: absolute;
            /* list-style-type: none; */
            margin: 0;
            padding: 0;
            max-height: 200px;
            overflow-y: auto;
            overflow-x: visible;
            /* overflow-y: scroll; */
            /* overflow: auto; */
        }

        .top > th {
            background: #ccc !important;
        }

        .table tr th {
            background-color: #fff;
            color: #000;
        }

        .cal-icon {
            display: initial;
        }

        .table tr th a {
            color: #000;
        }

        .dropdown-menu > .active > a, .dropdown-menu > .active > a:focus {
            color: #333333;
            background: none;
        }

            .dropdown-menu > .active > a:hover {
                background: #f5f5f5;
                color: #333333;
            }

        @@media screen and (min-width: 1600px) {
            .cal-cal-icon {
                display: table;
            }
        }


        .bootstrap-datetimepicker-widget {
            position: absolute;
            overflow: hidden;
        }

        .panel-body {
            position: relative;
            overflow: hidden;
        }

        .t-height {
            height: 340px;
        }

        .fa {
            font-size: 12px;
        }

        .bootstrap-datetimepicker-widget {
            bottom: auto !important;
            position: absolute !important;
            z-index: 5000 !important;
        }

        .multiselecterr {
            border-bottom: 1px solid red;
        }
        .btn .caret{
           
        }
        .btn-group > .btn, .btn-group-vertical > .btn{
            width:150px;
           

        }
        .table > thead > tr > th, .table > tbody > tr > td, .table > tfoot > tr > td{
            padding-left:10px;
            padding-right:10px;
        }
        .multiselect-selected-text{
           width: 95%;
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline-flex;
        }
       
    </style>
}
<div class="page" style="overflow:visible;">

    @using (Html.BeginForm("TravelClaim", "Payroll", FormMethod.Post, new { id = "frmClaim", name = "frmClaim" }))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default panel-hovered panel-stacked mb10">
                    <div class="panel-heading">
                        Travel Expenses Claim Form - @Model.claimHeader.Name
                    </div>
                    <div class="panel-body">
                        <input type="hidden" id="claimHeader_TravelClaimId" name="claimHeader.TravelClaimId" value="@Model.claimHeader.TravelClaimId" />
                        @Html.HiddenFor(x => x.claimHeader.Name)
                        @Html.HiddenFor(x => x.claimHeader.EmployeeId)
                        <div class="row css5">

                            <label class="col-md-2 control-label">
                                <span class="pull-right">From Date</span>
                            </label>
                            <div class="col-md-2">
                                <div class="input-group date dtCss dtCssFromDate" id="FromDate">
                                    @Html.TextBoxFor(x => x.claimHeader.FromDate,
                                   new { @class = "form-control dtCssTxt input-sm" })
                                    <span class="input-group-addon">
                                        <i class="ion ion-calendar"></i>
                                    </span>
                                </div>

                            </div>
                            <label class="col-md-2 control-label">
                                <span class="pull-right">To Date</span>
                            </label>
                            <div class="col-md-2">
                                <div class="input-group date dtCss dtCssToDate" id="ToDate">
                                    @Html.TextBoxFor(x => x.claimHeader.ToDate,
                                   new { @class = "form-control dtCssTxt input-sm" })
                                    <span class="input-group-addon">
                                        <i class="ion ion-calendar"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="row css5">

                            <label class="col-md-2 control-label">
                                <span class="pull-right">Country Visited</span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(x => x.claimHeader.CountryVisited, SelectListItemHelper.CountryList(), new { @class = "form-control input-sm", @multiple = "multiple", @required = "required" })
                            </div>

                            <label class="col-md-2 control-label">
                                <span class="pull-right">No Of Days</span>
                            </label>
                            <div class="col-md-2" id="noofdays">
                                @Html.TextBoxFor(x => x.claimHeader.NoOfDays, new { @class = "form-control input-sm numCss" })
                            </div>

                        </div>

                        <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData()">
                            <i class="fa fa-plus"></i><span>Add</span>
                        </button>

                        <div class="clearfix">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="table-responsive t-height">
                                        <table class="table table-condensed table-bordered" style="margin-top:10px">
                                            <thead>
                                                <tr style="background:#3f51b5;">
                                                    <th style="background:#3f51b5; color:#fff;">Category</th>
                                                    <th style="background:#3f51b5; color:#fff;">Date</th>
                                                    <th style="background:#3f51b5; color:#fff;">From Date</th>
                                                    <th style="background:#3f51b5; color:#fff;">To Date</th>
                                                    <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                    <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Receipts (Y/N)</th>
                                                    <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                    <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Currency</th>
                                                    <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                    <th style="background:#3f51b5; color:#fff;">Total</th>
                                                    <th style="background:#3f51b5; color:#fff;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (int i = 0; i < Model.claimDetail.Count; i++)
                                                {

                                                    <tr id="tr_@i" class="cssLength">
                                                        <td>
                                                            <input id="claimDetail_@(i)__TravelClaimDetailId"
                                                                   name="claimDetail[@(i)].TravelClaimDetailId" type="hidden" value="@Model.claimDetail[i].TravelClaimDetailId">
                                                            @Html.DropDownListFor(x => x.claimDetail[i].Category, SelectListItemHelper.TravelExpenses(), new { @class = "form-control input-sm", style = "width:100px;", required = "required", onchange = "showAccomdation(this)", data_index = i })
                                                            <script>
                                                                $(document).ready(function () {
                                                                    $('#claimDetail_' + '@i' + '__Category').val('@Model.claimDetail[i].Category');
                                                                    $('#claimDetail_' + '@i' + '__Currency').val('@Model.claimDetail[i].Currency');
                                                                });
                                                            </script>
                                                        </td>
                                                        <td>

                                                            <div class="input-group date dtCss travelDateCss" id="TravelDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetail[i].TravelDate, new { @class = "form-control input-sm dtCssTxt wdCss", required = "required", style = "width:100px;" })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>

                                                        <td class="accomdation" id="accfromDate_@i">
                                                            <div class="input-group date dtCss travelDateCss" id="FromDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetail[i].FromDate, new { @class = "form-control input-sm dtCssTxt wdCss", style = "width:100px;", @readonly = "readonly" })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>
                                                        <td class="accomdation" id="acctoDate_@i">
                                                            <div class="input-group date dtCss travelDateCss" id="TODate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetail[i].TODate, new { @class = "form-control input-sm dtCssTxt wdCss", style = "width:100px;", @readonly = "readonly" })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>

                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetail[i].Perticulars, new { @class = "form-control input-sm", style = "width:100px;" })
                                                        </td>
                                                        <td>

                                                            @Html.RadioButtonFor(x => x.claimDetail[i].Receipts, true, "Yes")
                                                            <span>Y</span>
                                                            @Html.RadioButtonFor(x => x.claimDetail[i].Receipts, false, "No")
                                                            <span>N</span>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetail[i].Amount, new
                                                       {
                                                           @class = "form-control input-sm decimalCss",
                                                           required = "required",
                                                           style = "width:100px;",
                                                           onblur = "CalculateTotal(this)",
                                                           data_index = i
                                                       })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(x => x.claimDetail[i].Currency, SelectListItemHelper.CurrnyList(), new { @class = "form-control input-sm", @style = "width:100px;", @onchange = "CalculateTotal(this)", data_index = i, @required = "required" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetail[i].ExchangeRate, new { @class = "form-control input-sm decimalCss", @style = "width:100px;", @readonly = true })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetail[i].TotalInSGD, new { @class = "form-control input-sm", @style = "width:100px", @readonly = "readolny" })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                    style="padding-left: 5px;margin-left: 6px;" onclick="deleteClaimDetail(@Model.claimDetail[i].TravelClaimDetailId,@i)">
                                                                <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                }
                                                <tr>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td><span class="pull-right"><b>Total  </b></span></td>
                                                    <td>@Html.TextBoxFor(x => x.claimHeader.GrossTotal, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                                    <td></td>
                                                </tr>

                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-6">
                                <button type="button" class="btn btn-primary btn-sm"
                                        onclick="SaveTravelClaim()">
                                    <i class="fa fa-floppy-o"></i>
                                    Save
                                </button>
                            </div>
                            <div class="col-md-6">
                                <button type="button" class="btn btn-primary btn-sm pull-right"
                                        onclick="location.href='@Url.Content("~/PayRoll/TravelClaimList")'">
                                    <i class="fa fa-arrow-left"></i><b>Back</b>
                                </button>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <input type="hidden" id="addOrDelete" name="addOrDelete" />
    }
    @using (Html.BeginForm("DeleteTravelClaim", "Payroll", FormMethod.Post, new { @id = "frmClaimDelete", name = "frmClaimDelete" }))
    {
        <input type="hidden" id="detailId" name="detailId" />
        <input type="hidden" id="headerId" name="headerId" />

    }

</div>
@section Scripts{
    <link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css"
          rel="stylesheet" type="text/css" />
    <script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"
            type="text/javascript"></script>
    <script type="text/javascript">

        @{
            if(Model.claimHeader.TravelClaimId!=0)
            {
                var varArr = Model.claimHeader.CountryVisited;
                var result = varArr.Split(',');
                for (var i=0; i < result.Length; i++)
                {
                    <text>
        $options = $('#claimHeader_CountryVisited option');
        $options.filter('[value="@result[i]"]').prop('selected', true);
        </text>
                }
            }

            <text>
        parseFloat($('#claimHeader_GrossTotal').val(@Model.claimHeader.GrossTotal)).toFixed(2);
        </text>
            <text>
        var detailCount = @Model.claimDetail.Count;

        </text>
        }

        function showAccomdation(obj) {

            var value = $('#' + obj.id).val() ==undefined ? $('#claimDetail_'+obj+'__Category').val() : $('#' + obj.id).val() ;
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            if (value == "ACCOMMODATION") {
                $('.accomdationCss').show();
                $('#claimDetail_' + index + '__TravelDate').val('');
                $('#claimDetail_' + index + '__TravelDate').attr("readonly", "readonly");
                $('#claimDetail_' + index + '__TravelDate').removeAttr("required");
                $('#claimDetail_' + index + '__FromDate').removeAttr("readonly");
                $('#claimDetail_' + index + '__TODate').removeAttr("readonly");
                $('#accfromDate_' + index).show();
                $('#acctoDate_' + index).show();
            }
                //$('.accomdation').show();
            else {
                $('#claimDetail_' + index + '__FromDate').attr("readonly", "readonly");
                $('#claimDetail_' + index + '__TODate').attr("readonly", "readonly");
                $('#claimDetail_' + index + '__FromDate').val('');
                $('#claimDetail_' + index + '__TODate').val('');
                $('#claimDetail_' + index + '__TravelDate').removeAttr("readonly");
                $('#claimDetail_' + index + '__TravelDate').attr("required", "required");
            }
        }

        $(document).ready(function () {

            for (var i = 0; i < detailCount; i++) {
                showAccomdation(i);
            }
            $('.dtCss').datetimepicker({
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down',
                    previous: 'fa fa-arrow-left',
                    next: 'fa fa-arrow-right',

                },
                format: dateFormat
            });


            $(".dtCssFromDate").on("dp.change", function (e) {
                $('#claimHeader_ToDate').val('');
                $('.dtCssToDate').data("DateTimePicker").minDate(e.date);
                $('#claimHeader_NoOfDays').val('');
                $('.travelDateCss').data("DateTimePicker").minDate(e.date);
            });
            $(".dtCssToDate").on("dp.change", function (e) {
                $('.travelDateCss').data("DateTimePicker").maxDate(e.date);
            });

            if ($('#claimHeader_FromDate').val() != null && $('#claimHeader_FromDate').val() != "") {
                $('.travelDateCss').each(function (index, item) {
                    $('#' + item.id).data("DateTimePicker").minDate($('#claimHeader_FromDate').val());
                });

            }

            if ($('#claimHeader_ToDate').val() != null && $('#claimHeader_ToDate').val() != "") {
                $('.travelDateCss').each(function (index, item) {
                    $('#' + item.id).data("DateTimePicker").maxDate($('#claimHeader_ToDate').val());
                });
            }


            $('#claimHeader_CountryVisited').multiselect({
                includeSelectAllOption: true
            });

        });

        $('#claimHeader_CountryVisited').on('change',function(e){
            debugger;
            $('.multiselect').removeClass('multiselecterr');
            // var title =$('.multiselect-selected-text').text();
        });

        $('#frmClaim').validate({
            rules: {
                'claimHeader.Name': {
                    required: true
                },

                'claimHeader.FromDate': {
                    required: true
                },
                'claimHeader.ToDate': {
                    required: true
                },
                'claimHeader.CountryVisited': {
                    required: true
                },
                'claimHeader.NoOfDays': {
                    required: true
                },
                'claimDetail.Category': {
                    required: true
                },
                'claimDetail.Currency': {
                    required: true
                }
            }
        });

        function SaveAndGetData() {
            if ($('#frmClaim').valid()) {
                //$('#addOrDelete').val('addOrDelete');
                $('#frmClaim').submit();
            }
            else
            {

                var title =$('.multiselect').attr('title');
                if(title=='None selected')
                    $('.multiselect').addClass('multiselecterr');
                else
                    $('.multiselect').removeClass('multiselecterr');

            }
        }

        function SaveTravelClaim() {
            if ($('#frmClaim').valid()) {
                $('#frmClaim').attr('action', '@Url.Content("~/Payroll/TravelClaimSave")');
                $('#frmClaim').submit();
                swal({
                    title: "Saved Successfully",
                    text: "",
                    closeOnConfirm: true,
                    confirmButtonText: "Ok",
                    confirmButtonClass: "btn-primary",
                    timer: 5000
                },
                    function () {
                        $.loader({
                            className: "blue-with-image-2",
                            content: '',
                        });
                    })
            }
            else {
                var title =$('.multiselect').attr('title');
                if(title=='None selected')
                    $('.multiselect').addClass('multiselecterr');
                else
                    $('.multiselect').removeClass('multiselecterr');
                swal("Incorrect Inputs");
            }
        }

        function CalculateTotal(obj) {
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetail_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetail_' + index + '__Currency option:selected').val()) ? 1 : parseFloat($('select#claimDetail_' + index + '__Currency option:selected').val());
            $('#claimDetail_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetail_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetail_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.cssLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetail_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_GrossTotal').val(grossTotal.toFixed(2));
            }
        }

        function deleteClaimDetail(detailId, index) {
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssLength').length;
            if (length > 1) {
                //if (detailId != undefined && detailId != null && detailId != 0) {
                //    $('#headerId').val(headerId);
                //    $('#detailId').val(detailId);

                //    $('#frmClaimDelete').submit();
                //}
                //else {
                $('#addOrDelete').val(index);
                $('#claimDetail_' + index + '__Category').removeAttr('required');
                $('#claimDetail_' + index + '__Amount').removeAttr('required');
                $('#claimDetail_' + index + '__Currency').removeAttr('required');
                $('#claimDetail_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();
                // $('#tr_' + index).remove();
                //CalculateTotal(index);
                //}
            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }

        $('#claimHeader_ToDate').on('blur', function (e) {
            $('#claimHeader_NoOfDays').val('');
            var fromDate = $('#FromDate').find('input').val();
            var toDate = $('#ToDate').find('input').val();

            var from = moment(fromDate, dateFormat);

            var to = moment(toDate, dateFormat);

            var days = moment.duration(to.diff(from)).asDays() + 1;
            $('#claimHeader_NoOfDays').val(days);
        })


    </script>

}