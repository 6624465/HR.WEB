@model HR.Web.ViewModels.TravelClaimVm
@{
    ViewBag.Title = "TravelClaim";
    var model = Model;
}
@section Styles{
    <link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css"
          rel="stylesheet" type="text/css" />
    <style>
        .multiselect-container {
            position: absolute;
            /* list-style-type: none; */
            margin: 0;
            padding: 0;
            max-height: 200px;
            overflow-y: auto;
            overflow-x: visible;
            /* overflow-y: scroll; */
            /* overflow: auto; */
        }

        .top > th {
            background: #ccc !important;
        }

        .table tr th {
            background-color: #fff;
            color: #000;
        }

        .cal-icon {
            display: initial;
        }

        .table tr th a {
            color: #000;
        }

        .dropdown-menu > .active > a, .dropdown-menu > .active > a:focus {
            color: #333333;
            background: none;
        }

            .dropdown-menu > .active > a:hover {
                background: #f5f5f5;
                color: #333333;
            }

        @@media screen and (min-width: 1600px) {
            .cal-cal-icon {
                display: table;
            }
        }


        .bootstrap-datetimepicker-widget {
            position: absolute;
            overflow: hidden;
        }

        .panel-body {
            position: relative;
            overflow: hidden;
        }

        .t-height {
            height: 340px;
        }

        .fa {
            font-size: 12px;
        }

        .bootstrap-datetimepicker-widget {
            bottom: auto !important;
            position: absolute !important;
            z-index: 5000 !important;
        }

        .multiselecterr {
            border-bottom: 1px solid red;
        }



        .btn-group > .btn, .btn-group-vertical > .btn {
            width: 150px;
        }

        .table > thead > tr > th, .table > tbody > tr > td, .table > tfoot > tr > td {
            padding-left: 10px;
            padding-right: 10px;
        }

        .multiselect-selected-text {
            width: 95%;
            overflow: hidden;
            text-overflow: ellipsis;
            display: inline-flex;
        }

        .nav > li > a {
            padding: 12px 12px;
            border: 1px solid #ccc;
            border-bottom: none;
        }

        #exTab1 {
            margin-top: 45px;
        }

        .mr-top {
            margin-top: 20px;
        }

        input[type="file"] {
            margin-bottom: 10px;
        }

        .uplaod-label {
            display: inline;
        }
    </style>
}
<div class="page" style="overflow:visible;">

    @using (Html.BeginForm("TravelClaim", "Payroll", FormMethod.Post, new { id = "frmClaim", name = "frmClaim" }))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default panel-hovered panel-stacked mb10">
                    <div class="panel-heading">
                        Travel Expenses Claim Form - @Model.claimHeader.Name
                    </div>
                    <div class="panel-body">
                     @Html.HiddenFor(x=>x.claimHeader.TravelClaimId)
                        @*<input type="hidden" id="claimHeader_TravelClaimId" name="claimHeader_TravelClaimId" value="@Model.claimHeader.TravelClaimId"/>*@
                        @Html.HiddenFor(x => x.claimHeader.Name)
                        @Html.HiddenFor(x => x.claimHeader.EmployeeId)
                        <div class="row css5">
                            <div class="col-md-4">
                                <label class="col-md-5 control-label">
                                    <span>Claim No</span>
                                </label>
                                <div class="col-md-6">
                                    @Html.TextBoxFor(x => x.claimHeader.ClaimNo,
                                   new { @class = "form-control input-sm", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                        <div class="row css5">
                            <div class="col-md-4">
                                <label class="col-md-5 control-label">
                                    <span>From Date</span>
                                </label>
                                <div class="col-md-6">
                                    <div class="input-group date dtCss dtCssFromDate" id="FromDate">
                                        @Html.TextBoxFor(x => x.claimHeader.FromDate,
                                   new { @class = "form-control dtCssTxt input-sm" })
                                        <span class="input-group-addon">
                                            <i class="ion ion-calendar"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="col-md-5 control-label">
                                    <span>To Date</span>
                                </label>
                                <div class="col-md-6">
                                    <div class="input-group date dtCss dtCssToDate" id="ToDate">
                                        @Html.TextBoxFor(x => x.claimHeader.ToDate,
                                   new { @class = "form-control dtCssTxt input-sm" })
                                        <span class="input-group-addon">
                                            <i class="ion ion-calendar"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row css5">
                            <div class="col-md-4">
                                <label class="col-md-5 control-label">
                                    <span>Country Visited</span>
                                </label>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(x => x.claimHeader.CountryVisited, SelectListItemHelper.CountryList(),
                                   new { @class = "form-control input-sm", @multiple = "multiple", @required = "required" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="col-md-5 control-label">
                                    <span>No Of Days</span>
                                </label>
                                <div class="col-md-6" id="noofdays">
                                    @Html.TextBoxFor(x => x.claimHeader.NoOfDays, new { @class = "form-control input-sm numCss" })
                                    @Html.HiddenFor(x => x.claimHeader.GrossTotal);
                                </div>
                            </div>
                        </div>
                        <div id="exTab1">
                            <ul class="nav nav-pills">
                                <li class="active">
                                    <a href="#Airfare" data-toggle="tab">Airfare</a>
                                </li>
                                <li>
                                    <a href="#Visa" data-toggle="tab">Visa</a>
                                </li>
                                <li>
                                    <a href="#Accommodation" data-toggle="tab">Accommodation</a>
                                </li>
                                <li>
                                    <a href="#TaxiLocal" data-toggle="tab">Taxi Fares Local</a>
                                </li>
                                <li>
                                    <a href="#TaxiOverseas" data-toggle="tab">Taxi Fares Overseas</a>
                                </li>
                                <li>
                                    <a href="#FoodBillsLocal" data-toggle="tab">Food Bills Local</a>
                                </li>
                                <li>
                                    <a href="#FoodBillsOverseas" data-toggle="tab">Food Bills Overseas</a>
                                </li>
                                <li>
                                    <a href="#OtherExpences" data-toggle="tab">Other Expences</a>
                                </li>
                                <li>
                                    <a href="#UploadFiles" data-toggle="tab">Upload Files</a>
                                </li>
                            </ul>
                        </div>
                        <div class="tab-content clearfix">
                            <div class="tab-pane active" id="Airfare">
                                <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData('AIRFARE')">
                                    <i class="fa fa-plus"></i><span>Add</span>
                                </button>

                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive t-height">
                                                <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                    <thead>
                                                        <tr style="background:#3f51b5;">
                                                            <th style="background:#3f51b5; color:#fff;">Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">
                                                                Receipts (Y/N)
                                                            </th>
                                                            <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">
                                                                Currency
                                                            </th>
                                                            <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                            <th style="background:#3f51b5; color:#fff;">Total</th>
                                                            <th style="background:#3f51b5; color:#fff;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.claimDetailAirfareVm.Count > 0)
                                                        {
                                                            for (int i = 0; i < Model.claimDetailAirfareVm.Count; i++)
                                                            {

                                                                <tr id="tr_@i" class="cssAirfareLength">

                                                                    <td>
                                                                        @Html.HiddenFor(x => x.claimDetailAirfareVm[i].TravelClaimDetailId)

                                                                        <div class="input-group date dtCss travelDateCss" id="TravelDate_@i">
                                                                            @Html.TextBoxFor(x => x.claimDetailAirfareVm[i].TravelDate, new { @class = "form-control input-sm dtCssTxt wdCss", required = "required", style = "width:100px;" })
                                                                            <span class="input-group-addon on-click cal-cal-icon">
                                                                                <i class="ion ion-calendar"></i>
                                                                            </span>
                                                                        </div>
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(x => x.claimDetailAirfareVm[i].Perticulars, new { @class = "form-control input-sm", style = "width:100px;" })
                                                                    </td>
                                                                    <td>

                                                                        @Html.RadioButtonFor(x => x.claimDetailAirfareVm[i].Receipts, true, "Yes")
                                                                        <span>Y</span>
                                                                        @Html.RadioButtonFor(x => x.claimDetailAirfareVm[i].Receipts, false, "No")
                                                                        <span>N</span>
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(x => x.claimDetailAirfareVm[i].Amount, new
                                                                        {
                                                                            @class = "form-control input-sm decimalCss",
                                                                            required = "required",
                                                                            style = "width:100px;",
                                                                            onblur = "CalculateAirFareTotal(this)",
                                                                            data_index = i
                                                                        })
                                                                    </td>
                                                                    <td>
                                                                        @Html.DropDownListFor(x => x.claimDetailAirfareVm[i].Currency,
                                                                        SelectListItemHelper.CurrnyList(), new
                                                                        {
                                                                        @class = "form-control input-sm",
                                                                        style = "width:100px;",
                                                                        onchange = "CalculateAirFareTotal(this)",
                                                                        data_index = i,
                                                                        required = "required"
                                                                        })
                                                                        <script type="text/javascript">
                                                                                    $(function(){
                                                                                        $('#claimDetailAirfareVm_' + '@i' + '__Currency').val('@Model.claimDetailAirfareVm[i].Currency');
                                                                                    });
                                                                        </script>
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(x => x.claimDetailAirfareVm[i].ExchangeRate,
                                                                        new { @class = "form-control input-sm decimalCss", @style = "width:100px;", @readonly = true })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBoxFor(x => x.claimDetailAirfareVm[i].TotalInSGD, new
                                                                        {
                                                                            @class = "form-control input-sm",
                                                                            @style = "width:100px",
                                                                            @readonly = "readolny"
                                                                        })
                                                                    </td>
                                                                    <td>
                                                                        <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                                style="padding-left: 5px;margin-left: 6px;"
                                                                                onclick="deleteAirfareClaimDetail(@Model.claimDetailAirfareVm[i].TravelClaimDetailId,@i,'AIRFARE')">
                                                                            <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                                        </button>
                                                                    </td>
                                                                </tr>
                                                                }
                                                            }

                                                                    <tr>
                                                                        <td></td>
                                                                        <td></td>
                                                                        <td></td>
                                                                        <td></td>
                                                                        <td></td>
                                                                        <td><span class="pull-right"><b>Total  </b></span></td>
                                                                        <td>
                                                                            @Html.TextBoxFor(x => x.claimHeader.claimDetailAirfareTotal,
                                                                            new { @class = "form-control input-sm", @readonly = "readonly" })
                                                                        </td>
                                                            @*<td>
                                                                <input type="text" id="claimDetailAirfareTotal"
                                                                       name="claimDetailAirfareTotal" class = "form-control input-sm" readonly = "readonly"/>
                                                            </td>*@

                                                            <td></td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                            </div>
                            <div class="tab-pane" id="Visa">
                                <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData('VISA')">
                                    <i class="fa fa-plus"></i><span>Add</span>
                                </button>

                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive t-height">
                                                <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                    <thead>
                                                        <tr style="background:#3f51b5;">
                                                            <th style="background:#3f51b5; color:#fff;">Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Receipts (Y/N)</th>
                                                            <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Currency</th>
                                                            <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                            <th style="background:#3f51b5; color:#fff;">Total</th>
                                                            <th style="background:#3f51b5; color:#fff;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.claimDetailVisaVm != null && Model.claimDetailVisaVm.Count > 0)
    {
                                                    for (int i = 0; i < Model.claimDetailVisaVm.Count; i++)
{

                                                    <tr id="tr_@i" class="cssVisaLength">
                                                        @Html.HiddenFor(x => x.claimDetailVisaVm[i].TravelClaimDetailId)
                                                        <td>
                                                            <div class="input-group date dtCss travelDateCss" id="TravelDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetailVisaVm[i].TravelDate, new { @class = "form-control input-sm dtCssTxt wdCss", required = "required", style = "width:100px;" })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailVisaVm[i].Perticulars, new { @class = "form-control input-sm", style = "width:100px;" })
                                                        </td>
                                                        <td>
                                                            @Html.RadioButtonFor(x => x.claimDetailVisaVm[i].Receipts, true, "Yes")
                                                            <span>Y</span>
                                                            @Html.RadioButtonFor(x => x.claimDetailVisaVm[i].Receipts, false, "No")
                                                            <span>N</span>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailVisaVm[i].Amount, new
        {
            @class = "form-control input-sm decimalCss",
            required = "required",
            style = "width:100px;",
            onblur = "CalculateVisaTotal(this)",
            data_index = i
        })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(x => x.claimDetailVisaVm[i].Currency, SelectListItemHelper.CurrnyList(), new { @class = "form-control input-sm", @style = "width:100px;", @onchange = "CalculateVisaTotal(this)", data_index = i, @required = "required" })
                                                            <script type="text/javascript">
                                                                        $(function(){
                                                                            $('#claimDetailVisaVm_' + '@i' + '__Currency').val('@Model.claimDetailVisaVm[i].Currency');
                                                                        });
                                                            </script>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailVisaVm[i].ExchangeRate, new { @class = "form-control input-sm decimalCss", @style = "width:100px;", @readonly = true })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailVisaVm[i].TotalInSGD, new { @class = "form-control input-sm", @style = "width:100px", @readonly = "readolny" })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                    style="padding-left: 5px;margin-left: 6px;"
                                                                    onclick="deleteVisaDetail(@Model.claimDetailVisaVm[i].TravelClaimDetailId,@i,'VISA')">
                                                                <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
}
}

                                                        <tr>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td><span class="pull-right"><b>Total  </b></span></td>
                                                            <td>@Html.TextBoxFor(x => x.claimHeader.claimDetailVisaTotal, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                                            <td></td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                            </div>
                            <div class="tab-pane" id="Accommodation">
                                <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData('ACCOMMODATION')">
                                    <i class="fa fa-plus"></i><span>Add</span>
                                </button>

                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive t-height">
                                                <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                    <thead>
                                                        <tr style="background:#3f51b5;">
                                                            <th style="background:#3f51b5; color:#fff;">From Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">To Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Receipts (Y/N)</th>
                                                            <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Currency</th>
                                                            <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                            <th style="background:#3f51b5; color:#fff;">Total</th>
                                                            <th style="background:#3f51b5; color:#fff;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.claimDetailAccomdationVm != null && Model.claimDetailAccomdationVm.Count > 0)
    {
                                                    for (int i = 0; i < Model.claimDetailAccomdationVm.Count; i++)
{
                                                    @Html.HiddenFor(x => x.claimDetailAccomdationVm[i].TravelClaimDetailId)
                                                    <tr id="tr_@i" class="cssAccomodationLength">
                                                        <td class="accomdation" id="accfromDate_@i">
                                                            <div class="input-group date dtCss travelDateCss" id="FromDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetailAccomdationVm[i].FromDate, new
            {
                @class = "form-control input-sm dtCssTxt wdCss",
                style = "width:100px;"
            })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>
                                                        <td class="accomdation" id="acctoDate_@i">
                                                            <div class="input-group date dtCss travelDateCss" id="TODate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetailAccomdationVm[i].ToDate, new
            {
                @class = "form-control input-sm dtCssTxt wdCss",
                style = "width:100px;"
            })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>

                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailAccomdationVm[i].Perticulars, new { @class = "form-control input-sm", style = "width:100px;" })
                                                        </td>
                                                        <td>

                                                            @Html.RadioButtonFor(x => x.claimDetailAccomdationVm[i].Receipts, true, "Yes")
                                                            <span>Y</span>
                                                            @Html.RadioButtonFor(x => x.claimDetailAccomdationVm[i].Receipts, false, "No")
                                                            <span>N</span>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailAccomdationVm[i].Amount, new
        {
            @class = "form-control input-sm decimalCss",
            required = "required",
            style = "width:100px;",
            onblur = "CalculateAccomodationTotal(this)",
            data_index = i
        })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(x => x.claimDetailAccomdationVm[i].Currency, SelectListItemHelper.CurrnyList(), new { @class = "form-control input-sm", @style = "width:100px;", @onchange = "CalculateAccomodationTotal(this)", data_index = i, @required = "required" })
                                                            <script type="text/javascript">
                                                                        $(function(){
                                                                            $('#claimDetailAccomdationVm_' + '@i' + '__Currency').val('@Model.claimDetailAccomdationVm[i].Currency');
                                                                        });
                                                            </script>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailAccomdationVm[i].ExchangeRate, new { @class = "form-control input-sm decimalCss", @style = "width:100px;", @readonly = true })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailAccomdationVm[i].TotalInSGD, new { @class = "form-control input-sm", @style = "width:100px", @readonly = "readolny" })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                    style="padding-left: 5px;margin-left: 6px;"
                                                                    onclick="deleteAccomodationDetail(@Model.claimDetailAccomdationVm[i].TravelClaimDetailId,@i,'ACCOMMODATION')">
                                                                <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
}
}

                                                        <tr>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td><span class="pull-right"><b>Total  </b></span></td>
                                                            <td>@Html.TextBoxFor(x => x.claimHeader.claimDetailAccomdationTotal, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                                            <td></td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                            </div>
                            <div class="tab-pane" id="TaxiLocal">


                                <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData('TAXILOCAL')">
                                    <i class="fa fa-plus"></i><span>Add</span>
                                </button>

                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive t-height">
                                                <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                    <thead>
                                                        <tr style="background:#3f51b5;">
                                                            <th style="background:#3f51b5; color:#fff;">Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Receipts (Y/N)</th>
                                                            <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Currency</th>
                                                            <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                            <th style="background:#3f51b5; color:#fff;">Total</th>
                                                            <th style="background:#3f51b5; color:#fff;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.claimDetailTaxiLocalVm != null && Model.claimDetailTaxiLocalVm.Count > 0)
    {
                                                    for (int i = 0; i < Model.claimDetailTaxiLocalVm.Count; i++)
{
                                                    @Html.HiddenFor(x => x.claimDetailTaxiLocalVm[i].TravelClaimDetailId)
                                                    <tr id="tr_@i" class="cssTaxilocalLength">

                                                        <td>

                                                            <div class="input-group date dtCss travelDateCss" id="TravelDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetailTaxiLocalVm[i].TravelDate, new
            {
                @class = "form-control input-sm dtCssTxt wdCss",
                required = "required",
                style = "width:100px;"
            })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>

                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailTaxiLocalVm[i].Perticulars,
                new { @class = "form-control input-sm", style = "width:100px;" })
                                                        </td>
                                                        <td>

                                                            @Html.RadioButtonFor(x => x.claimDetailTaxiLocalVm[i].Receipts, true, "Yes")
                                                            <span>Y</span>
                                                            @Html.RadioButtonFor(x => x.claimDetailTaxiLocalVm[i].Receipts, false, "No")
                                                            <span>N</span>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailTaxiLocalVm[i].Amount, new
        {
            @class = "form-control input-sm decimalCss",
            required = "required",
            style = "width:100px;",
            onblur = "CalculateTaxilocalTotal(this)",
            data_index = i
        })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(x => x.claimDetailTaxiLocalVm[i].Currency,
                SelectListItemHelper.CurrnyList(), new
                {
                    @class = "form-control input-sm",
                    @style = "width:100px;",
                    @onchange = "CalculateTaxilocalTotal(this)",
                    data_index = i,
                    @required = "required"
                })
                                                            <script type="text/javascript">
                                                                        $(function(){
                                                                            $('#claimDetailTaxiLocalVm_' + '@i' + '__Currency').val('@Model.claimDetailTaxiLocalVm[i].Currency');
                                                                        });
                                                            </script>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailTaxiLocalVm[i].ExchangeRate,
                new { @class = "form-control input-sm decimalCss", @style = "width:100px;", @readonly = true })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailTaxiLocalVm[i].TotalInSGD, new
        {
            @class = "form-control input-sm",
            @style = "width:100px",
            @readonly = "readolny"
        })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                    style="padding-left: 5px;margin-left: 6px;"
                                                                    onclick="deletetaxilocalDetail(@Model.claimDetailTaxiLocalVm[i].TravelClaimDetailId,@i,'TAXILOCAL')">
                                                                <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
}
}

                                                        <tr>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td><span class="pull-right"><b>Total  </b></span></td>
                                                            <td>@Html.TextBoxFor(x => x.claimHeader.claimDetailTaxiLocalTotal, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                                            <td></td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                            </div>
                            <div class="tab-pane" id="TaxiOverseas">
                                <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData('TAXIOVERSEAS')">
                                    <i class="fa fa-plus"></i><span>Add</span>
                                </button>

                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive t-height">
                                                <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                    <thead>
                                                        <tr style="background:#3f51b5;">
                                                            <th style="background:#3f51b5; color:#fff;">Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Receipts (Y/N)</th>
                                                            <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Currency</th>
                                                            <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                            <th style="background:#3f51b5; color:#fff;">Total</th>
                                                            <th style="background:#3f51b5; color:#fff;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.claimDetailTaxiOverseasVm != null && Model.claimDetailTaxiOverseasVm.Count > 0)
    {
                                                    for (int i = 0; i < Model.claimDetailTaxiOverseasVm.Count; i++)
{
                                                    @Html.HiddenFor(x => x.claimDetailTaxiOverseasVm[i].TravelClaimDetailId)
                                                    <tr id="tr_@i" class="csstaxioverseaLength">
                                                        <td>
                                                            <div class="input-group date dtCss travelDateCss" id="TravelDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetailTaxiOverseasVm[i].TravelDate, new
            {
                @class = "form-control input-sm dtCssTxt wdCss",
                required = "required",
                style = "width:100px;"
            })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailTaxiOverseasVm[i].Perticulars, new
        {
            @class = "form-control input-sm",
            style = "width:100px;"
        })
                                                        </td>
                                                        <td>

                                                            @Html.RadioButtonFor(x => x.claimDetailTaxiOverseasVm[i].Receipts, true, "Yes")
                                                            <span>Y</span>
                                                            @Html.RadioButtonFor(x => x.claimDetailTaxiOverseasVm[i].Receipts, false, "No")
                                                            <span>N</span>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailTaxiOverseasVm[i].Amount, new
        {
            @class = "form-control input-sm decimalCss",
            required = "required",
            style = "width:100px;",
            onblur = "CalculatetaxioverseaTotal(this)",
            data_index = i
        })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(x => x.claimDetailTaxiOverseasVm[i].Currency, SelectListItemHelper.CurrnyList(), new { @class = "form-control input-sm", @style = "width:100px;", @onchange = "CalculatetaxioverseaTotal(this)", data_index = i, @required = "required" })
                                                            <script type="text/javascript">
                                                                        $(function(){
                                                                            $('#claimDetailTaxiOverseasVm_' + '@i' + '__Currency').val('@Model.claimDetailTaxiOverseasVm[i].Currency');
                                                                        });
                                                            </script>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailTaxiOverseasVm[i].ExchangeRate, new { @class = "form-control input-sm decimalCss", @style = "width:100px;", @readonly = true })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailTaxiOverseasVm[i].TotalInSGD, new { @class = "form-control input-sm", @style = "width:100px", @readonly = "readolny" })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                    style="padding-left: 5px;margin-left: 6px;"
                                                                    onclick="deletetaxioverseaDetail(@Model.claimDetailTaxiOverseasVm[i].TravelClaimDetailId,@i,'TAXIOVERSEAS')">
                                                                <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
}
}

                                                        <tr>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td><span class="pull-right"><b>Total  </b></span></td>
                                                            <td>@Html.TextBoxFor(x => x.claimHeader.claimDetailTaxiOverseasTotal, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                                            <td></td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                            </div>

                            <div class="tab-pane" id="FoodBillsLocal">
                                <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData('FOODBILLSLOCAL')">
                                    <i class="fa fa-plus"></i><span>Add</span>
                                </button>

                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive t-height">
                                                <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                    <thead>
                                                        <tr style="background:#3f51b5;">
                                                            <th style="background:#3f51b5; color:#fff;">Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Receipts (Y/N)</th>
                                                            <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Currency</th>
                                                            <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                            <th style="background:#3f51b5; color:#fff;">Total</th>
                                                            <th style="background:#3f51b5; color:#fff;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.claimDetailFoodLocalVm != null && Model.claimDetailFoodLocalVm.Count > 0)
    {
                                                    for (int i = 0; i < Model.claimDetailFoodLocalVm.Count; i++)
{
                                                    @Html.HiddenFor(x => x.claimDetailFoodLocalVm[i].TravelClaimDetailId)
                                                    <tr id="tr_@i" class="cssfoodbillslocalLength">
                                                        <td>

                                                            <div class="input-group date dtCss travelDateCss" id="TravelDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetailFoodLocalVm[i].TravelDate, new { @class = "form-control input-sm dtCssTxt wdCss", required = "required", style = "width:100px;" })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>

                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailFoodLocalVm[i].Perticulars, new { @class = "form-control input-sm", style = "width:100px;" })
                                                        </td>
                                                        <td>

                                                            @Html.RadioButtonFor(x => x.claimDetailFoodLocalVm[i].Receipts, true, "Yes")
                                                            <span>Y</span>
                                                            @Html.RadioButtonFor(x => x.claimDetailFoodLocalVm[i].Receipts, false, "No")
                                                            <span>N</span>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailFoodLocalVm[i].Amount, new
        {
            @class = "form-control input-sm decimalCss",
            required = "required",
            style = "width:100px;",
            onblur = "CalculatefoodbillslocalTotal(this)",
            data_index = i
        })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(x => x.claimDetailFoodLocalVm[i].Currency, SelectListItemHelper.CurrnyList(), new { @class = "form-control input-sm", @style = "width:100px;", @onchange = "CalculatefoodbillslocalTotal(this)", data_index = i, @required = "required" })
                                                            <script type="text/javascript">
                                                                        $(function(){
                                                                            $('#claimDetailFoodLocalVm_' + '@i' + '__Currency').val('@Model.claimDetailFoodLocalVm[i].Currency');
                                                                        });
                                                            </script>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailFoodLocalVm[i].ExchangeRate, new { @class = "form-control input-sm decimalCss", @style = "width:100px;", @readonly = true })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailFoodLocalVm[i].TotalInSGD, new { @class = "form-control input-sm", @style = "width:100px", @readonly = "readolny" })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                    style="padding-left: 5px;margin-left: 6px;"
                                                                    onclick="deletefoodbillslocalDetail(@Model.claimDetailFoodLocalVm[i].TravelClaimDetailId,@i,'FOODBILLSLOCAL')">
                                                                <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
}
}

                                                        <tr>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td><span class="pull-right"><b>Total  </b></span></td>
                                                            <td>@Html.TextBoxFor(x => x.claimHeader.claimDetailFoodLocalTotal, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                                            <td></td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                            </div>
                            <div class="tab-pane" id="FoodBillsOverseas">


                                <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData('FOODBILLSOVERSEAS')">
                                    <i class="fa fa-plus"></i><span>Add</span>
                                </button>

                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive t-height">
                                                <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                    <thead>
                                                        <tr style="background:#3f51b5;">
                                                            <th style="background:#3f51b5; color:#fff;">Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Receipts (Y/N)</th>
                                                            <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Currency</th>
                                                            <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                            <th style="background:#3f51b5; color:#fff;">Total</th>
                                                            <th style="background:#3f51b5; color:#fff;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.claimDetailFoodOverseasVm != null && Model.claimDetailFoodOverseasVm.Count > 0)
    {
                                                    for (int i = 0; i < Model.claimDetailFoodOverseasVm.Count; i++)
{
                                                    @Html.HiddenFor(x => x.claimDetailFoodOverseasVm[i].TravelClaimDetailId)
                                                    <tr id="tr_@i" class="cssfoodbillsoverseasLength">
                                                        <td>

                                                            <div class="input-group date dtCss travelDateCss" id="TravelDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetailFoodOverseasVm[i].TravelDate, new { @class = "form-control input-sm dtCssTxt wdCss", required = "required", style = "width:100px;" })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailFoodOverseasVm[i].Perticulars, new { @class = "form-control input-sm", style = "width:100px;" })
                                                        </td>
                                                        <td>

                                                            @Html.RadioButtonFor(x => x.claimDetailFoodOverseasVm[i].Receipts, true, "Yes")
                                                            <span>Y</span>
                                                            @Html.RadioButtonFor(x => x.claimDetailFoodOverseasVm[i].Receipts, false, "No")
                                                            <span>N</span>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailFoodOverseasVm[i].Amount, new
        {
            @class = "form-control input-sm decimalCss",
            required = "required",
            style = "width:100px;",
            onblur = "CalculatefoodbillsoverseasTotal(this)",
            data_index = i
        })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(x => x.claimDetailFoodOverseasVm[i].Currency, SelectListItemHelper.CurrnyList(), new { @class = "form-control input-sm", @style = "width:100px;", @onchange = "CalculatefoodbillsoverseasTotal(this)", data_index = i, @required = "required" })
                                                            <script type="text/javascript">
                                                                        $(function(){
                                                                            $('#claimDetailFoodOverseasVm_' + '@i' + '__Currency').val('@Model.claimDetailFoodOverseasVm[i].Currency');
                                                                        });
                                                            </script>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailFoodOverseasVm[i].ExchangeRate, new { @class = "form-control input-sm decimalCss", @style = "width:100px;", @readonly = true })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailFoodOverseasVm[i].TotalInSGD, new { @class = "form-control input-sm", @style = "width:100px", @readonly = "readolny" })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                    style="padding-left: 5px;margin-left: 6px;"
                                                                    onclick="deletefoodbillsoverseasDetail(@Model.claimDetailFoodOverseasVm[i].TravelClaimDetailId,@i,'FOODBILLSOVERSEAS')">
                                                                <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
}
}

                                                        <tr>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td><span class="pull-right"><b>Total  </b></span></td>
                                                            <td>@Html.TextBoxFor(x => x.claimHeader.claimDetailFoodOverseasTotal, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                                            <td></td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                            </div>
                            <div class="tab-pane" id="OtherExpences">
                                <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData('OTHEREXPENSES')">
                                    <i class="fa fa-plus"></i><span>Add</span>
                                </button>

                                <div class="clearfix">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="table-responsive t-height">
                                                <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                    <thead>
                                                        <tr style="background:#3f51b5;">
                                                            <th style="background:#3f51b5; color:#fff;">Date</th>
                                                            <th style="background:#3f51b5; color:#fff;">Perticulars</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Receipts (Y/N)</th>
                                                            <th style="background:#3f51b5; color:#fff;">Amount</th>
                                                            <th style="white-space:nowrap; background:#3f51b5; color:#fff;">Currency</th>
                                                            <th style="background:#3f51b5; color:#fff;">Exchange Rate</th>
                                                            <th style="background:#3f51b5; color:#fff;">Total</th>
                                                            <th style="background:#3f51b5; color:#fff;">Action</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model.claimDetailOtherExpensesVm != null && Model.claimDetailOtherExpensesVm.Count > 0)
    {
                                                    for (int i = 0; i < Model.claimDetailOtherExpensesVm.Count; i++)
{
                                                    @Html.HiddenFor(x => x.claimDetailOtherExpensesVm[i].TravelClaimDetailId)
                                                    <tr id="tr_@i" class="cssOtherExpensesLength">
                                                        <td>

                                                            <div class="input-group date dtCss travelDateCss" id="TravelDate_@i">
                                                                @Html.TextBoxFor(x => x.claimDetailOtherExpensesVm[i].TravelDate, new { @class = "form-control input-sm dtCssTxt wdCss", required = "required", style = "width:100px;" })
                                                                <span class="input-group-addon on-click cal-cal-icon">
                                                                    <i class="ion ion-calendar"></i>
                                                                </span>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailOtherExpensesVm[i].Perticulars, new { @class = "form-control input-sm", style = "width:100px;" })
                                                        </td>
                                                        <td>

                                                            @Html.RadioButtonFor(x => x.claimDetailOtherExpensesVm[i].Receipts, true, "Yes")
                                                            <span>Y</span>
                                                            @Html.RadioButtonFor(x => x.claimDetailOtherExpensesVm[i].Receipts, false, "No")
                                                            <span>N</span>
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailOtherExpensesVm[i].Amount, new
        {
            @class = "form-control input-sm decimalCss",
            required = "required",
            style = "width:100px;",
            onblur = "CalculateOtherExpensesTotal(this)",
            data_index = i
        })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(x => x.claimDetailOtherExpensesVm[i].Currency,
                SelectListItemHelper.CurrnyList(), new
                {
                    @class = "form-control input-sm",
                    @style = "width:100px;",
                    @onchange = "CalculateOtherExpensesTotal(this)",
                    data_index = i,
                    @required = "required"
                })

                                                            <script type="text/javascript">
                                                                        $(function(){
                                                                            $('#claimDetailOtherExpensesVm_' + '@i' + '__Currency').val('@Model.claimDetailOtherExpensesVm[i].Currency');
                                                                        });
                                                            </script>

                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailOtherExpensesVm[i].ExchangeRate, new
        {
            @class = "form-control input-sm decimalCss",
            @style = "width:100px;",
            @readonly = true
        })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(x => x.claimDetailOtherExpensesVm[i].TotalInSGD, new { @class = "form-control input-sm", @style = "width:100px", @readonly = "readolny" })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                    style="padding-left: 5px;margin-left: 6px;"
                                                                    onclick="deleteOtherExpensesDetail(@Model.claimDetailOtherExpensesVm[i].TravelClaimDetailId,@i,'OTHEREXPENSES')">
                                                                <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
}
}

                                                        <tr>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td><span class="pull-right"><b>Total  </b></span></td>
                                                            <td>@Html.TextBoxFor(x => x.claimHeader.claimDetailOtherExpensesTotal, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                                            <td></td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />

                            </div>

                            <div class="tab-pane" id="UploadFiles">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="myFile">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-md-2"><label class="uplaod-label">Documents</label></div>
                                        <div class="col-md-6">
                                            <input type="file" id="choose-btn">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mr-top">
                            <div class="col-md-12">
                                <button type="button" class="btn btn-primary btn-sm"
                                        onclick="SaveTravelClaim()">
                                    <i class="fa fa-floppy-o"></i>
                                    Save
                                </button>
                                <button type="button" class="btn btn-primary btn-sm">
                                    <i class="fa fa-eye"></i><b>Preview</b>
                                </button>
                                <button type="button" class="btn btn-primary btn-sm" onclick="Submit()">
                                    <i class="fa fa fa-check-circle"></i><b>Submit</b>
                                </button>
                                <button type="button" class="btn btn-primary btn-sm"
                                        onclick="location.href='@Url.Content("~/PayRoll/TravelClaimList")'">
                                    <i class="fa fa-arrow-left"></i><b>Back</b>
                                </button>

                            </div>

                        </div>

                    </div>

                </div>
            </div>
        </div>
        <input type="hidden" id="addOrDelete" name="addOrDelete" />
        <input type="hidden" id="addNewClaim" name="addNewClaim" />
    }
    @using (Html.BeginForm("DeleteTravelClaim", "Payroll", FormMethod.Post, new { @id = "frmClaimDelete", name = "frmClaimDelete" }))
    {
        <input type="hidden" id="detailId" name="detailId" />
        <input type="hidden" id="headerId" name="headerId" />

    }
    @using(Html.BeginForm("SubmittravelClaim", "PayRoll",FormMethod.Post, new { id="frmsubmit",name= "frmsubmit" }))
    {
        <input type="hidden" id="travelid" name="travelid"/>
    }

</div>
@section Scripts{

    <script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"
            type="text/javascript"></script>
    <script type="text/javascript">

        @{
            if(Model.claimHeader.TravelClaimId!=0)
            {
                var varArr = Model.claimHeader.CountryVisited;
                var result = varArr.Split(',');
                for (var i=0; i < result.Length; i++)
                {
                    <text>
        $options = $('#claimHeader_CountryVisited option');
        $options.filter('[value="@result[i]"]').prop('selected', true);
        </text>
                }
            }

            <text>
        parseFloat($('#claimHeader_GrossTotal').val(@Model.claimHeader.GrossTotal)).toFixed(2);
        </text>
            <text>
        var detailCount = @Model.claimDetailAirfareVm.Count;

        </text>
        }

        function showAccomdation(obj) {

            var value = $('#' + obj.id).val() ==undefined ? $('#claimDetail_'+obj+'__Category').val() : $('#' + obj.id).val() ;
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            if (value == "ACCOMMODATION") {
                $('.accomdationCss').show();
                $('#claimDetail_' + index + '__TravelDate').val('');
                $('#claimDetail_' + index + '__TravelDate').attr("readonly", "readonly");
                $('#claimDetail_' + index + '__TravelDate').removeAttr("required");
                $('#claimDetail_' + index + '__FromDate').removeAttr("readonly");
                $('#claimDetail_' + index + '__TODate').removeAttr("readonly");
                $('#accfromDate_' + index).show();
                $('#acctoDate_' + index).show();
            }
                //$('.accomdation').show();
            else {
                $('#claimDetail_' + index + '__FromDate').attr("readonly", "readonly");
                $('#claimDetail_' + index + '__TODate').attr("readonly", "readonly");
                $('#claimDetail_' + index + '__FromDate').val('');
                $('#claimDetail_' + index + '__TODate').val('');
                $('#claimDetail_' + index + '__TravelDate').removeAttr("readonly");
                $('#claimDetail_' + index + '__TravelDate').attr("required", "required");
            }
        }

        $(document).ready(function () {

            for (var i = 0; i < detailCount; i++) {
                showAccomdation(i);
            }
            $('.dtCss').datetimepicker({
                icons: {
                    time: 'fa fa-clock-o',
                    date: 'fa fa-calendar',
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down',
                    previous: 'fa fa-arrow-left',
                    next: 'fa fa-arrow-right',

                },
                format: dateFormat
            });


            $(".dtCssFromDate").on("dp.change", function (e) {
                $('#claimHeader_ToDate').val('');
                $('.dtCssToDate').data("DateTimePicker").minDate(e.date);
                $('#claimHeader_NoOfDays').val('');
                $('.travelDateCss').data("DateTimePicker").minDate(e.date);
            });
            $(".dtCssToDate").on("dp.change", function (e) {
                $('.travelDateCss').data("DateTimePicker").maxDate(e.date);
            });

            if ($('#claimHeader_FromDate').val() != null && $('#claimHeader_FromDate').val() != "") {
                $('.travelDateCss').each(function (index, item) {
                    $('#' + item.id).data("DateTimePicker").minDate($('#claimHeader_FromDate').val());
                });

            }

            if ($('#claimHeader_ToDate').val() != null && $('#claimHeader_ToDate').val() != "") {
                $('.travelDateCss').each(function (index, item) {
                    $('#' + item.id).data("DateTimePicker").maxDate($('#claimHeader_ToDate').val());
                });
            }


            $('#claimHeader_CountryVisited').multiselect({
                includeSelectAllOption: true
            });

        });

        $('#claimHeader_CountryVisited').on('change',function(e){
            debugger;
            $('.multiselect').removeClass('multiselecterr');
            // var title =$('.multiselect-selected-text').text();
        });

        //$('#frmClaim').validate({
        //    rules: {
        //        'claimHeader.Name': {
        //            required: true
        //        },

        //        'claimHeader.FromDate': {
        //            required: true
        //        },
        //        'claimHeader.ToDate': {
        //            required: true
        //        },
        //        'claimHeader.CountryVisited': {
        //            required: true
        //        },
        //        'claimHeader.NoOfDays': {
        //            required: true
        //        },
        //        'claimDetail.Category': {
        //            required: true
        //        },
        //        'claimDetail.Currency': {
        //            required: true
        //        }
        //    }
        //});

        function SaveAndGetData(category) {

            // if ($('#frmClaim').valid()) {
            if (true) {
                $('#addNewClaim').val(category);
                $('#frmClaim').submit();
            }
            else
            {

                var title =$('.multiselect').attr('title');
                if(title=='None selected')
                    $('.multiselect').addClass('multiselecterr');
                else
                    $('.multiselect').removeClass('multiselecterr');

            }
        }

        function SaveTravelClaim() {
            if ($('#frmClaim').valid()) {
                $('#frmClaim').attr('action', '@Url.Content("~/Payroll/TravelClaimSave")');
                $('#frmClaim').submit();
                swal({
                    title: "Saved Successfully",
                    text: "",
                    closeOnConfirm: true,
                    confirmButtonText: "Ok",
                    confirmButtonClass: "btn-primary",
                    timer: 5000
                },
                    function () {
                        $.loader({
                            className: "blue-with-image-2",
                            content: '',
                        });
                    })
            }
            else {
                var title =$('.multiselect').attr('title');
                if(title=='None selected')
                    $('.multiselect').addClass('multiselecterr');
                else
                    $('.multiselect').removeClass('multiselecterr');
                swal("Incorrect Inputs");
            }
        }
        // Calculations for AirFare : Start
        function CalculateAirFareTotal(obj) {
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetailAirfareVm_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetailAirfareVm_' + index + '__Currency option:selected').val()) ? 1 :
                parseFloat($('select#claimDetailAirfareVm_' + index + '__Currency option:selected').val());
            $('#claimDetailAirfareVm_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetailAirfareVm_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetailAirfareVm_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.cssAirfareLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetailAirfareVm_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_claimDetailAirfareTotal').val(grossTotal.toFixed(2));
            }
        }

        function deleteAirfareClaimDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssAirfareLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailAirfareVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailAirfareVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailAirfareVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailAirfareVm_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }

        // Calculations for AirFare : End


        // Calculations for Visa: Start

        function CalculateVisaTotal(obj){
            debugger;
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetailVisaVm_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetailVisaVm_' + index + '__Currency option:selected').val()) ? 1 :
                parseFloat($('select#claimDetailVisaVm_' + index + '__Currency option:selected').val());
            $('#claimDetailVisaVm_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetailVisaVm_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetailVisaVm_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.cssVisaLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetailVisaVm_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_claimDetailVisaTotal').val(grossTotal.toFixed(2));
            }
        }



        function deleteVisaDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssVisaLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailVisaVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailVisaVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailVisaVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailVisaVm_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }
        // Calculations for Visa: End

        //Calculations for Accomodation: Start
        function CalculateAccomodationTotal(obj){
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetailAccomdationVm_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetailAccomdationVm_' + index + '__Currency option:selected').val()) ? 1 :
                parseFloat($('select#claimDetailAccomdationVm_' + index + '__Currency option:selected').val());
            $('#claimDetailAccomdationVm_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetailAccomdationVm_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetailAccomdationVm_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.cssAccomodationLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetailAccomdationVm_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_claimDetailAccomdationTotal').val(grossTotal.toFixed(2));
            }
        }

        function deleteAccomodationDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssAccomodationLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailAccomdationVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailAccomdationVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailAccomdationVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailAccomdationVm_' + index + '__FromDate').removeAttr('required');
                $('#claimDetailAccomdationVm_' + index + '__ToDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }

        //Calculations for Accomodation: End
        //calculations for TaxiFares local:start
        function CalculateTaxilocalTotal(obj) {
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetailTaxiLocalVm_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetailTaxiLocalVm_' + index + '__Currency option:selected').val()) ? 1 :
                parseFloat($('select#claimDetailTaxiLocalVm_' + index + '__Currency option:selected').val());
            $('#claimDetailTaxiLocalVm_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetailTaxiLocalVm_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetailTaxiLocalVm_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.cssTaxilocalLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetailTaxiLocalVm_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_claimDetailTaxiLocalTotal').val(grossTotal.toFixed(2));
            }
        }

        function deletetaxilocalDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssTaxilocalLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailTaxiLocalVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailTaxiLocalVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailTaxiLocalVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailTaxiLocalVm_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }
        //calculations for TaxiFares local:end
        //calculations for TaxiFares oversea:start
        function CalculatetaxioverseaTotal(obj) {
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetailTaxiOverseasVm_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetailTaxiOverseasVm_' + index + '__Currency option:selected').val()) ? 1 :
                parseFloat($('select#claimDetailTaxiOverseasVm_' + index + '__Currency option:selected').val());
            $('#claimDetailTaxiOverseasVm_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetailTaxiOverseasVm_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetailTaxiOverseasVm_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.csstaxioverseaLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetailTaxiOverseasVm_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_claimDetailTaxiOverseasTotal').val(grossTotal.toFixed(2));
            }
        }

        function deletetaxioverseaDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.csstaxioverseaLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailTaxiOverseasVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailTaxiOverseasVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailTaxiOverseasVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailTaxiOverseasVm_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }

        //calculations for TaxiFares oversea:end
        //calculations for Food Bills Local:end
        function CalculatefoodbillslocalTotal(obj) {
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetailFoodLocalVm_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetailFoodLocalVm_' + index + '__Currency option:selected').val()) ? 1 :
                parseFloat($('select#claimDetailFoodLocalVm_' + index + '__Currency option:selected').val());
            $('#claimDetailFoodLocalVm_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetailFoodLocalVm_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetailFoodLocalVm_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.cssfoodbillslocalLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetailFoodLocalVm_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_claimDetailFoodLocalTotal').val(grossTotal.toFixed(2));
            }
        }

        function deletefoodbillslocalDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssfoodbillslocalLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailFoodLocalVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailFoodLocalVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailFoodLocalVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailFoodLocalVm_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }
        //calculations for Food Bills Local:end
        //calculations for Food Bills overseas:end
        function CalculatefoodbillsoverseasTotal(obj) {
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetailFoodOverseasVm_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetailFoodOverseasVm_' + index + '__Currency option:selected').val()) ? 1 :
                parseFloat($('select#claimDetailFoodOverseasVm_' + index + '__Currency option:selected').val());
            $('#claimDetailFoodOverseasVm_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetailFoodOverseasVm_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetailFoodOverseasVm_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.cssfoodbillsoverseasLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetailFoodOverseasVm_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_claimDetailFoodOverseasTotal').val(grossTotal.toFixed(2));
            }
        }
        function deletefoodbillsoverseasDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssfoodbillsoverseasLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailFoodOverseasVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailFoodOverseasVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailFoodOverseasVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailFoodOverseasVm_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }

        function deleteOtherExpensesDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssfoodbillsoverseasLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailFoodOverseasVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailFoodOverseasVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailFoodOverseasVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailFoodOverseasVm_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }
        //calculations for Food Bills overseas:end
        //calculations for OtherExpenses:start
        function  CalculateOtherExpensesTotal(obj) {
            var index = $(obj).data('index') == undefined ? obj : $(obj).data('index');
            var amount = parseFloat($('#claimDetailOtherExpensesVm_' + index + '__Amount').val());
            var exrate = isNaN($('select#claimDetailOtherExpensesVm_' + index + '__Currency option:selected').val()) ? 1 :
                parseFloat($('select#claimDetailOtherExpensesVm_' + index + '__Currency option:selected').val());
            $('#claimDetailOtherExpensesVm_' + index + '__ExchangeRate').val(exrate);
            if (isNaN(amount)) {
                amount = 0;
            }
            var exchangeRate = parseFloat($('#claimDetailOtherExpensesVm_' + index + '__ExchangeRate').val());
            if (isNaN(exchangeRate)) {
                exchangeRate = 1;
            }
            var Total = parseFloat(amount * exchangeRate).toFixed(2);
            Total = parseFloat(Total).toFixed(2);
            $('#claimDetailOtherExpensesVm_' + index + '__TotalInSGD').val(Total);
            debugger;
            var length = $('.cssOtherExpensesLength').length;
            var grossTotal = 0;
            for (var i = 0; i < length; i++) {

                var grossVal = $('#claimDetailOtherExpensesVm_' + i + '__TotalInSGD').val();
                if (grossVal != null && grossVal != "") {
                    grossTotal = parseFloat(grossTotal) + parseFloat(grossVal);
                }
                $('#claimHeader_claimDetailOtherExpensesTotal').val(grossTotal.toFixed(2));
            }
        }

        function deleteOtherExpensesDetail(detailId, index,category){
            var headerId = $('#claimHeader_TravelClaimId').val();
            var length = $('.cssOtherExpensesLength').length;
            if (length > 1) {

                $('#addNewClaim').val(category);
                $('#addOrDelete').val(index);
                $('#claimDetailOtherExpensesVm_' + index + '__Perticulars').removeAttr('required');
                $('#claimDetailOtherExpensesVm_' + index + '__Amount').removeAttr('required');
                $('#claimDetailOtherExpensesVm_' + index + '__Currency').removeAttr('required');
                $('#claimDetailOtherExpensesVm_' + index + '__TravelDate').removeAttr('required');
                $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/TravelClaim")', 'novalidate': 'novalidate' });
                $('#frmClaim').submit();

            }
            else {
                swal("Message!", "You can not delete because one row should be mandatory");
            }
        }
        //calculations for OtherExpenses:end


        $('#claimHeader_ToDate').on('blur', function (e) {
            $('#claimHeader_NoOfDays').val('');
            var fromDate = $('#FromDate').find('input').val();
            var toDate = $('#ToDate').find('input').val();

            var from = moment(fromDate, dateFormat);

            var to = moment(toDate, dateFormat);

            var days = moment.duration(to.diff(from)).asDays() + 1;
            $('#claimHeader_NoOfDays').val(days);
        })
        function Submit(){
            $('#frmClaim').attr({ 'action': '@Url.Content("~/Payroll/SubmittravelClaim")', 'novalidate': 'novalidate' }).submit();

        }

    </script>

}