@model HR.Web.ViewModels.EmpSalaryStructureVm

@section Styles{
    <style>
        .table tfoot {
            display: table-footer-group;
        }

        .no-wrap {
            white-space: nowrap;
        }
    </style>
}
<div class="page">
    @using (Html.BeginForm("EmpSalaryStructure", "Payroll", FormMethod.Post, new { id = "frmEmpSalary", name = "frmEmpSalary" }))
    {
        @Html.HiddenFor(x => x.employeeSalaryStructure.empSalaryStructureHeader.EmployeeId)
        @Html.HiddenFor(x => x.employeeSalaryStructure.empSalaryStructureHeader.BranchId)
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default panel-hovered panel-stacked mb10">
                    <div class="panel-heading">
                        Salary Structure
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <label class="col-md-2 control-label">
                                <span class="pull-right">Name:</span>
                            </label>
                            <div class="col-md-4">
                                <label class="control-label pull-left">@Model.EmployeeName</label>
                            </div>
                        </div>
                        <div class="row css5">
                            <label class="col-md-2 control-label">
                                <span class="pull-right">Designation:</span>
                            </label>
                            <div class="col-md-4">
                                <label class="control-label pull-left">@Model.Designation</label>
                            </div>
                        </div>
                        <div class="row css5">
                            <label class="col-md-2 control-label">
                                <span class="pull-right">Department:</span>
                            </label>
                            <div class="col-md-4">
                                <label class="control-label pull-left">@Model.Department</label>
                            </div>
                        </div>
                        <div class="row css5">
                            <label class="col-md-2 control-label">
                                <span class="pull-right">Salary Strcture:</span>
                            </label>
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.employeeSalaryStructure.empSalaryStructureHeader.StructureID, SelectListItemHelper.SalaryStructure(), "",
                               new { @class = "form-control", onchange = "GetSalaryStructure(this)" })
                            </div>
                            <label class="col-md-2 control-label">
                                <span class="pull-right">Remarks:</span>
                            </label>
                            <div class="col-md-4">
                                @Html.TextAreaFor(x => x.employeeSalaryStructure.empSalaryStructureHeader.Remarks, new { @class = "form-control", rows = 2, cols = 3 })
                            </div>
                        </div>
                        <div class="row css10">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-condensed table-bordered">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Code</th>
                                                <th class="no-wrap">Contribution Register</th>
                                                <th>Computation</th>
                                                <th>Amount</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{

                                                var ContributionRegister = SelectListItemHelper.ContributionRegister();
                                                var Computation = SelectListItemHelper.Computation();
                                            }
                                            @for (int i = 0; i < Model.employeeSalaryStructure.structureCompanyDeductionDetail.Count(); i++)
                                            {

                                                <tr class="trCss">
                                                    <td>
                                                        @Html.HiddenFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].EmployeeId)
                                                        @Html.HiddenFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].BranchId)
                                                        @Html.CheckBoxFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].IsActive,
                                                        new { @class = "form-control chkCss", data_index = i })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].Code)
                                                        @Html.HiddenFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].Code)
                                                    </td>
                                                    <td>
                                                        @Html.DropDownListFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].ContributionRegister,
                                                    new SelectList(ContributionRegister, "Value", "Text", Model.employeeSalaryStructure.structureCompanyDeductionDetail[i].ContributionRegister), "", new { @class = "form-control input-sm" })
                                                    </td>
                                                    <td>
                                                        @Html.DropDownListFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].Computation,
                                                    new SelectList(Computation, "Value", "Text", Model.employeeSalaryStructure.structureCompanyDeductionDetail[i].Computation), "", new { @class = "form-control input-sm", onchange = "calculateTotal()" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].Amount, new { @class = "form-control input-sm", onblur = "validateAmount(this," + i + ")" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.employeeSalaryStructure.structureCompanyDeductionDetail[i].Total, new { @class = "form-control input-sm", @readonly = "readonly" })
                                                    </td>
                                                </tr>

                                            }

                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td style="text-align:right;">Total Gross</td>
                                                <td>@Html.TextBoxFor(x => x.employeeSalaryStructure.empSalaryStructureHeader.TotalGross, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>

                            </div>
                        </div>
                        <h4>Deductions</h4>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-condensed table-bordered">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th>Code</th>                                              
                                                <th class="no-wrap">Contribution Register</th>
                                                <th>Computation</th>
                                                <th>Amount</th>
                                                <th>Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @for (int i = 0; i < Model.employeeSalaryStructure.structureEmployeeDeductionDetail.Count; i++)
                                            {

                                                <tr class="trCssDeduct">
                                                    <td>
                                                        @Html.HiddenFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].EmployeeId)
                                                        @Html.HiddenFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].BranchId)
                                                        @Html.CheckBoxFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].IsActive,
                                                        new { @class = "form-control chkCssDeduct", data_index = i })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].Code)
                                                        @Html.HiddenFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].Code)
                                                    </td>
                                                    <td>
                                                        @Html.DropDownListFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].ContributionRegister,
                                                    new SelectList(ContributionRegister, "Value", "Text", Model.employeeSalaryStructure.structureEmployeeDeductionDetail[i].ContributionRegister), "", new { @class = "form-control input-sm" })
                                                    </td>
                                                    <td>
                                                        @Html.DropDownListFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].Computation,
                                                    new SelectList(Computation, "Value", "Text", Model.employeeSalaryStructure.structureEmployeeDeductionDetail[i].Computation), "", new { @class = "form-control input-sm", onchange = "calculateTotal()" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].Amount, new { @class = "form-control input-sm", onblur = "validateDeductAmount(this," + i + ")" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(x => x.employeeSalaryStructure.structureEmployeeDeductionDetail[i].Total, new { @class = "form-control input-sm", @readonly = "readonly" })
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td style="text-align:right;">Total Deductions</td>
                                                <td>@Html.TextBoxFor(x => x.employeeSalaryStructure.empSalaryStructureHeader.TotalDeductions, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                            </tr>
                                            <tr>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>                                               
                                                <td style="text-align:right;">Total Payable</td>
                                                <td>@Html.TextBoxFor(x => x.employeeSalaryStructure.empSalaryStructureHeader.Salary, new { @class = "form-control input-sm", @readonly = "readonly" })</td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <button class="btn btn-primary btn-sm" type="button" onclick="SaveEmployeeStructure()"><i class="fa fa-floppy-o" aria-hidden="true"></i>Save</button>
            </div>
        </div>
                                                }
</div>


@section Scripts{

    @*employeeSalaryStructure_empSalaryStructureDetail_0__ContributionRegister*@
    <script type="text/javascript">
         @{
             <text>
        var percentage = '@UTILITY.PERCENTAGE';
        var count= @Model.employeeSalaryStructure.structureCompanyDeductionDetail.Count +  @Model.employeeSalaryStructure.structureCompanyDeductionDetail.Count;

        </text>
         }

        var value=true;
        function showHide(value){

            for (var index = 1; index <count; index++)
            {
                if(!value){
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__ContributionRegister').attr('disabled', 'disabled');
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Computation').attr('disabled', 'disabled');
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Amount').attr('disabled', 'disabled');

                    $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__ContributionRegister').attr('disabled', 'disabled');
                    $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Computation').attr('disabled', 'disabled');
                    $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Amount').attr('disabled', 'disabled');
                }
                else{
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__ContributionRegister').removeAttr('disabled');
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Computation').removeAttr('disabled');
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Amount').removeAttr('disabled');

                    $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__ContributionRegister').removeAttr('disabled');
                    $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Computation').removeAttr('disabled');
                    $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Amount').removeAttr('disabled');
                }
            }

        }

        $(function () {
            showHide(false);
            $(".chkCss").trigger('ifChanged');
            $(".chkCssDeduct").trigger('ifChanged');
            $('#frmEmpSalary').validate({
                rules:{
                    'employeeSalaryStructure.empSalaryStructureHeader.StructureID':{
                        required :true
                    },
                    'employeeSalaryStructure.empSalaryStructureHeader.Remarks':{
                        required :true
                    }
                }
            })

        });

        $('.chkCss').on("ifChanged", function (event) {
            var temp = this;
            var index=$(this).data('index');

            if($('#'+this.id).prop('checked')){

                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__ContributionRegister').attr('required','required');
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Computation').attr('required','required');
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Amount').attr('required','required');

                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__ContributionRegister').removeAttr('disabled');
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Computation').removeAttr('disabled');
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Amount').removeAttr('disabled');
            }
            else{
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__ContributionRegister').val('').attr('disabled', 'disabled');
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Computation').val('').attr('disabled', 'disabled');
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Amount').val('').attr('disabled', 'disabled');

               // $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Total').val('')

                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__ContributionRegister').removeAttr('required');
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__RegisterCode').removeAttr('required');
                $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + index + '__Amount').removeAttr('required');

                calculateTotal();
            }

        });


        $('.chkCssDeduct').on("ifChanged", function (event) {
            var temp = this;
            var index=$(this).data('index');
            debugger;
            if($('#'+this.id).prop('checked')){
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__ContributionRegister').attr('required','required');
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Computation').attr('required','required');
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Amount').attr('required','required');

                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__ContributionRegister').removeAttr('disabled');
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Computation').removeAttr('disabled');
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Amount').removeAttr('disabled');
            }
            else{
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__ContributionRegister').val('').attr('disabled', 'disabled');
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Computation').val('').attr('disabled', 'disabled');
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Amount').val('').attr('disabled', 'disabled');

                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Total').val('')

                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__ContributionRegister').removeAttr('required');
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__RegisterCode').removeAttr('required');
                $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + index + '__Amount').removeAttr('required');

                calculateTotal();
            }

        });

        function GetSalaryStructure(el){
            location.href='@Url.Content("~/Payroll/EmpSalaryStructure?employeeId=" + Model.employeeSalaryStructure.empSalaryStructureHeader.EmployeeId)' +'&structureId='+el.value;
        }

        function SaveEmployeeStructure(){
            if( $('#frmEmpSalary').valid()){
                $.loader({
                    className: "blue-with-image-2",
                    content: '',
                });
                $('#frmEmpSalary').submit();
            }

        }



        function calculateTotal(){
            var obj={};
            validateAmount(obj,0);
            validateDeductAmount(obj,0);
        }


        function validateAmount(el, index) {
           
            var rowCount=$('.trCss').length;
            var TotalGross=0;
            for(var i=0; i<rowCount;i++){
                var basicAmount=$('#employeeSalaryStructure_structureCompanyDeductionDetail_' + 0 + '__Amount').val();
                if(index == 0 && basicAmount!=""){

                    basicAmount =parseFloat(basicAmount).toFixed(2);
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + 0 + '__Total').val(basicAmount);
                }

                if(!$('#employeeSalaryStructure_structureCompanyDeductionDetail_' + i + '__IsActive').prop('checked'))
                    continue;

                var total = $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + i + '__Amount').val();
                if(total!="")
                    total=parseFloat(total).toFixed(2);
                var ComputationCode = $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + i + '__Computation').val();
                if (ComputationCode == percentage) {

                    if(total>100){
                        $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + i + '__Amount').val('');
                        swal({
                            title: "Alert!",
                            text: "Percentage value should be less than 100",
                            type: "warning"
                        });
                        return;
                    }
                    var grandTotal=(basicAmount* total)/100;
                    grandTotal=parseFloat(grandTotal).toFixed(2);
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + i + '__Total').val(grandTotal);
                }else{
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + i + '__Total').val(total);
                }
                debugger;
                /* Calculate Nett amount*/
                var currentValue=$('#employeeSalaryStructure_structureCompanyDeductionDetail_' + i + '__Total').val();
                if(currentValue!="" && currentValue!=null){
                    TotalGross = parseFloat(TotalGross)+ parseFloat(currentValue);
                    TotalGross=TotalGross.toFixed(2);
                    $('#employeeSalaryStructure_empSalaryStructureHeader_TotalGross').val(TotalGross);

                }
                
                var _totalGross= $('#employeeSalaryStructure_empSalaryStructureHeader_TotalGross').val() == "" ? 0 :  $('#employeeSalaryStructure_empSalaryStructureHeader_TotalGross').val();
                var _totalDeductions= $('#employeeSalaryStructure_empSalaryStructureHeader_TotalDeductions').val()== "" ? 0 : $('#employeeSalaryStructure_empSalaryStructureHeader_TotalDeductions').val();

                var netAmount=parseFloat(_totalGross)+ parseFloat(_totalDeductions);
                $('#employeeSalaryStructure_empSalaryStructureHeader_Salary').val(netAmount.toFixed(2));

            }
            validateDeductAmount(this, 0);

        }


        function validateDeductAmount(el, index){
            debugger;
            var rowCount=$('.trCssDeduct').length;
            var netAmount=0;
            for(var i=0; i<rowCount;i++){
                var basicAmount=$('#employeeSalaryStructure_structureCompanyDeductionDetail_' + 0 + '__Amount').val();
                if(index == 0 && basicAmount!=""){
                    basicAmount =parseFloat(basicAmount).toFixed(2);
                    $('#employeeSalaryStructure_structureCompanyDeductionDetail_' + 0 + '__Total').val(basicAmount);
                }

                //if(!$('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + i + '__IsActive').prop('checked'))
                //    continue;

                var total = $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + i + '__Amount').val();
                if(total!="")
                    total=parseFloat(total).toFixed(2);
                var ComputationCode = $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + i + '__Computation').val();
                if (ComputationCode == percentage) {

                    if(total>100){
                        $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + i + '__Amount').val('');
                        swal({
                            title: "Alert!",
                            text: "Percentage value should be less than 100",
                            type: "warning"
                        });
                        return;
                    }
                    var grandTotal=(basicAmount* total)/100;
                    grandTotal=parseFloat(grandTotal).toFixed(2);
                    $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + i + '__Total').val(grandTotal);
                }else{
                    $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + i + '__Total').val(total);
                }
                debugger;
                /* Calculate Nett amount*/
                var currentValue=$('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + i + '__Total').val() == "" ?
                     0 : $('#employeeSalaryStructure_structureEmployeeDeductionDetail_' + i + '__Total').val();
                //if(currentValue!="" && currentValue!=null){
                    netAmount = parseFloat(netAmount)+ parseFloat(currentValue);
                    netAmount=netAmount.toFixed(2);
                    $('#employeeSalaryStructure_empSalaryStructureHeader_TotalDeductions').val(netAmount);
              //  }
               

            }
            var _totalGross= $('#employeeSalaryStructure_empSalaryStructureHeader_TotalGross').val() == "" ? 0 :  $('#employeeSalaryStructure_empSalaryStructureHeader_TotalGross').val();
            var _totalDeductions= $('#employeeSalaryStructure_empSalaryStructureHeader_TotalDeductions').val()== "" ? 0 : $('#employeeSalaryStructure_empSalaryStructureHeader_TotalDeductions').val();

            var netAmount=parseFloat(_totalGross)+ parseFloat(_totalDeductions);
            $('#employeeSalaryStructure_empSalaryStructureHeader_Salary').val(netAmount.toFixed(2));

        }
    </script>
}