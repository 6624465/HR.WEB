@model HR.Web.Models.EmployeeLeaveList
@{
    var message = (string)ViewData["Message"] ?? "";
}
@using (Html.BeginForm("SaveEmployeeLeaveForm", "Leave", FormMethod.Post, new { id = "frmLeave", name = "frmLeave" }))
{
    <div class="page">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default panel-hovered panel-stacked mb10">
                    <div class="panel-heading">Employee Leave Form</div>
                    <div class="panel-body ">
                        @if (!string.IsNullOrWhiteSpace(message))
                        {
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="alert alert-danger">
                                        <button type="button" class="close" data-dismiss="alert">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                        <div>@message</div>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="row css10">
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label class="col-md-1 control-label">
                                            <span class="pull-right">From Dt</span>
                                        </label>
                                        <div class="col-md-3">
                                            <div class="input-group date" id="FromDt">
                                                @Html.TextBoxFor(x => x.FromDate, new { @class = "form-control dtCss", required = "required" })
                                                <span class="input-group-addon">
                                                    <i class="ion ion-calendar"></i>
                                                </span>
                                            </div>
                                        </div>
                                        <label class="col-md-1 control-label">
                                            <span class="pull-right">To Dt</span>
                                        </label>
                                        <div class="col-md-3">
                                            <div class="input-group date" id="ToDt">
                                                @Html.TextBoxFor(x => x.ToDate, new { @class = "form-control dtCss", required = "required"})
                                                <span class="input-group-addon">
                                                    <i class="ion ion-calendar"></i>
                                                </span>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row css10">
                            <div class="form-group">
                                <label class="col-md-1 control-label">
                                    <span class="pull-right">Days</span>
                                </label>
                                <div class="col-md-3">
                                    @Html.TextBoxFor(x => x.Days, new { @class = "form-control", required = "required", @readonly = "readonly"})
                                </div>
                                @*<label class="col-md-1 control-label">
                                                       <span class="pull-right">Employee</span>
                                                   </label>
                                                   <div class="col-md-2">
                                                       @Html.DropDownListFor(x => x.EmployeeId,
                                    SelectListItemHelper.EmployeeList(),
                                    "Select Employee",
                                    new { @class = "form-control" })
                                                   </div>*@
                                <label class="col-md-1 control-label">
                                    <span class="pull-right">Half Day</span>
                                </label>
                                <div class="col-md-3">
                                    <input type="checkbox" class="form-control" name="chkhalfday" />
                                </div>


                            </div>
                        </div>
                        <div class="row css10">
                            <label class="col-md-1 control-label">
                                <span class="pull-right">LeaveType</span>
                            </label>
                            <div class="col-md-5">
                                @Html.DropDownListFor(x => x.LeaveTypeId,
                                SelectListItemHelper.EmployeeLeaveType(),
                                "Select Leave Type",
                                new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row css10">
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Reason</span>
                            </label>
                            <div class="col-md-5">
                                @Html.TextAreaFor(x => x.Reason, new { @class = "form-control", maxlength = "500" })
                            </div>

                        </div>
                        <div class="row css10">
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Remarks</span>
                            </label>
                            <div class="col-md-5">
                                @Html.TextAreaFor(x => x.Remarks, new { @class = "form-control", maxlength = "500" })
                            </div>
                        </div>
                        <div class="row css10">
                            <div class="col-md-9"></div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <span class="pull-right">
                                        <button type="submit" class="btn btn-primary btn-sm" onclick="SaveEmployeeLeaveForm()"><i class="fa fa-floppy-o" aria-hidden="true"></i>Save</button>
                                    </span>
                                    @*<button type="button" class="btn btn-default btn-sm" data-dismiss=""><i class="fa fa-times" aria-hidden="true"></i>Cancel</button>*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                </div>
            </div>
        </div>
    </div>
}
@section Scripts{

    <script type="text/javascript">
        $(function () {
            $('#li_Leave').addClass('open');
            $('#li_emprequestleave').addClass('active');
        });
        var date = new Date();
        $('.dtCss').datetimepicker({
            icons: {
                time: 'fa fa-clock-o',
                date: 'fa fa-calendar',
                up: 'fa fa-arrow-up',
                down: 'fa fa-arrow-down',
                previous: 'fa fa-arrow-left',
                next: 'fa fa-arrow-right',
              
            },
            format: 'MM/DD/YYYY',
            minDate: date
          
        });
        
       
        $("#ToDt").on("dp.change", function (e) {
            var fromDate = $('#FromDt').find('input').val();
            var toDate = $('#ToDt').find('input').val();
            var from = moment(fromDate, 'MM/DD/YYYY');
            var to = moment(toDate, 'MM/DD/YYYY');
            var days = moment.duration(to.diff(from)).asDays();
            $('#Days').val(days);
        });
        
       
        $('#frmLeave').validate({
            rules: {
                'FromDate': {
                    required: true
                },
                'ToDate': {
                    required: true
                },
                'Days': {
                    required: true
                },
                'EmployeeId': {
                    required: true
                },
                'LeaveTypeId': {
                    required: true
                },
                'Reason': {
                    required: true

                },
                'Remarks': {
                    required: true

                }
            }
        });

        function clearrec() {
            $('#FromDate').val('');
            $('#ToDate').val('');
            $('#Days').val('');
            $('#EmployeeId').val('');
            $('#LeaveTypeId').val('');
            $('#Reason').val('');
            $('#Remarks').val('');

        }
        clearrec();

        function SaveEmployeeLeaveForm() {
            if ($('#frmLeave').valid()) {
                $('#frmLeave').submit();
            }

        }
    </script>
}
