
@model HR.Web.Models.EmployeeLeaveList
@{
    var message = (string)ViewData["Message"] ?? "";
    var IsLop = ViewData["IsLop"] == null ? false : (bool)ViewData["IsLop"];
    var temp = Model;
}
@using (Html.BeginForm("SaveEmployeeLeaveForm", "Leave", FormMethod.Post, new { id = "frmLeave", name = "frmLeave" }))
{
    <div class="page">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default panel-hovered panel-stacked mb10">
                    <div class="panel-heading">Employee Leave Form</div>
                    <div class="panel-body ">

                        <div class="row css10">
                            <div class="col-md-12">
                                <div class="row">
                                    <div class="form-group">
                                        <label class="col-md-1 control-label">
                                            <span class="pull-right">From Dt</span>
                                        </label>
                                        <div class="col-md-3">
                                            <div class="input-group date" id="FromDt">
                                                @Html.TextBoxFor(x => x.FromDate, new { @class = "form-control dtCss", required = "required" })
                                                <span class="input-group-addon">
                                                    <i class="ion ion-calendar"></i>
                                                </span>
                                            </div>
                                        </div>
                                        <label class="col-md-1 control-label">
                                            <span class="pull-right">To Dt</span>
                                        </label>
                                        <div class="col-md-3">
                                            <div class="input-group date" id="ToDt">
                                                @Html.TextBoxFor(x => x.ToDate, new { @class = "form-control dtCss", required = "required" })
                                                <span class="input-group-addon">
                                                    <i class="ion ion-calendar"></i>
                                                </span>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row css10">
                            <div class="form-group">
                                <label class="col-md-1 control-label">
                                    <span class="pull-right">Days</span>
                                </label>
                                <div class="col-md-3">
                                    @Html.TextBoxFor(x => x.Days, new { @class = "form-control", required = "required", @readonly = "readonly" })
                                </div>
                                @*<label class="col-md-1 control-label">
                                                       <span class="pull-right">Employee</span>
                                                   </label>
                                                   <div class="col-md-2">
                                                       @Html.DropDownListFor(x => x.EmployeeId,
                                    SelectListItemHelper.EmployeeList(),
                                    "Select Employee",
                                    new { @class = "form-control" })
                                                   </div>*@
                                <label class="col-md-1 control-label">
                                    <span class="pull-right">Half Day</span>
                                </label>
                                <div class="col-md-3">
                                    <input type="checkbox" class="form-control" name="chkhalfday" id="chkhalfday" />
                                </div>


                            </div>
                        </div>
                        <div class="row css10">
                            <label class="col-md-1 control-label">
                                <span class="pull-right">LeaveType</span>
                            </label>
                            <div class="col-md-5">
                                @Html.DropDownListFor(x => x.LeaveTypeId,
         SelectListItemHelper.EmployeeLeaveType(),
         "Select Leave Type",
         new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row css10">
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Reason</span>
                            </label>
                            <div class="col-md-5">
                                @Html.TextAreaFor(x => x.Reason, new { @class = "form-control", maxlength = "500" })
                            </div>

                        </div>

                        <div class="row css10">
                            <div class="col-md-9"></div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <span class="pull-right">
                                        <button type="submit" class="btn btn-primary btn-sm" id="btnSave" onclick="SaveEmployeeLeaveForm()"><i class="fa fa-floppy-o" aria-hidden="true"></i>Save</button>
                                    </span>
                                    @*<button type="button" class="btn btn-default btn-sm" data-dismiss=""><i class="fa fa-times" aria-hidden="true"></i>Cancel</button>*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" name="isChecked" id="isChecked" />
    <input type="hidden" name="isLOP" id="isLOP" />
}
<link href="~/Css/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/Core/sweetalert.js"></script>
@section Scripts{

    <script type="text/javascript">
        $(function () {

            @if (!string.IsNullOrWhiteSpace(message))
            {
                if (IsLop)
                {
                    <text>
                        swal({
                            title: "Are you sure?",
                            text: "@message",
                            type: "warning",
                            showCancelButton: true,
                            confirmButtonClass: "btn-danger",
                            confirmButtonText: "Yes, I agree it!",
                            cancelButtonText: "No, Cancel!",
                            closeOnConfirm: false,
                            closeOnCancel: false
                        },
                        function (isConfirm) {
                            if (isConfirm) {
                                swal("Applied!", "You have successfully applied the leave.", "success");
                                $('#frmLeave').attr('action', '@Url.Content("~/Leave/SaveLOP")');
                                $('#frmLeave').submit();
                            } else {
                                swal("Cancelled", "Your leave has been cancelled:)", "error");
                            }
                        });
                    </text>
                }
                else
                {
                    <text>
                        swal({
                            title: "Alert!",
                            text: "@message"
                        });
                    </text>
                }
            }

            $('#li_Leave').addClass('open');
            $('#li_emprequestleave').addClass('active');

            @if(Model.FromDate != DateTime.MinValue)
            {
                <text>
                    var from = moment('@Model.FromDate', 'DD/MM/YYYY').format('MM/DD/YYYY');
                    //$('#FromDt').find('input').val(from);
                    $('#FromDate').data("DateTimePicker").date(from);
                </text>
            }

            @if(Model.ToDate != DateTime.MinValue)
             {
                 <text>
                    var to = moment('@Model.ToDate', 'DD/MM/YYYY').format('MM/DD/YYYY');
                    //$('#ToDt').find('input').val(to);
                    $('#ToDate').data("DateTimePicker").date(to);
                </text>
             }

            @if(Model.Days == 0.5M)
            {
                <text>
                    $('#chkhalfday').attr('checked', 'checked');
                    $('#isChecked').val('on');
                    $('.icheckbox_flat-blue').addClass('checked');
                </text>
            }
        });
        var date = new Date();
        $('.dtCss').datetimepicker({
            icons: {
                time: 'fa fa-clock-o',
                date: 'fa fa-calendar',
                up: 'fa fa-arrow-up',
                down: 'fa fa-arrow-down',
                previous: 'fa fa-arrow-left',
                next: 'fa fa-arrow-right',

            },
            format: 'MM/DD/YYYY',
            minDate: date
        });

        $("#FromDt").on("dp.change", function (e) {
            var fromDate = $('#FromDt').find('input').val();
            var toDate = $('#ToDt').find('input').val();

            if (toDate != undefined && toDate != "") {
                var from = moment(fromDate, 'MM/DD/YYYY');
                var to = moment(toDate, 'MM/DD/YYYY');
                var days = moment.duration(to.diff(from)).asDays() + 1;
                if (days < 0) {
                    $('#FromDt').find('input').val('');
                    $('#ToDt').find('input').val('');
                    $('#Days').val('');
                } else {
                    $('#Days').val(days);
                }
            }
            if (fromDate != toDate) {

                $('#chkhalfday').removeAttr('checked');
                $('.icheckbox_flat-blue').removeClass('checked');
            }
            checkDates();
        });

        $("#ToDate").on("change", function (e) {
            var fromDate = $('#FromDt').find('input').val();
            if (fromDate != undefined && fromDate != "") {
                var toDate = $('#ToDt').find('input').val();
                var from = moment(fromDate, 'MM/DD/YYYY');
                var to = moment(toDate, 'MM/DD/YYYY');
                var days = moment.duration(to.diff(from)).asDays() + 1;
                if (days < 0) {
                    $('#FromDt').find('input').val('');
                    $('#ToDt').find('input').val('');
                    $('#Days').val('');
                } else {
                    $('#Days').val(days);
                }
            }
            if (fromDate != toDate) {

                $('#chkhalfday').removeAttr('checked');
                $('.icheckbox_flat-blue').removeClass('checked');
            }
            checkDates();
        });

        $("#ToDate").on("blur", function (e) {
            checkDates();
        });
        $("#FromDate").on("blur", function (e) {
            checkDates();
        });

        function checkDates() {
            var fromDate = $('#FromDt').find('input').val();
            var toDate = $('#ToDt').find('input').val();
            var from = moment(fromDate, 'MM/DD/YYYY');
            var to = moment(toDate, 'MM/DD/YYYY');
            if (fromDate != undefined && fromDate != "" && toDate != undefined && toDate != "") {
                var days = moment.duration(to.diff(from)).asDays() + 1;
                if (days > 1) {
                    $('#Days').val(days);
                    $('#chkhalfday').removeAttr('checked');
                    $('.icheckbox_flat-blue').removeClass('checked');
                    $('#chkhalfday').attr('disabled', 'disabled');
                    $('#isChecked').val('off');
                }
                else if (days < 0) {
                    $('#chkhalfday').removeAttr('disabled');
                    $('#FromDt').find('input').val('');
                    $('#ToDt').find('input').val('');
                    $('#Days').val('');
                }
                else if (days == 1) {
                    $('#chkhalfday').removeAttr('disabled');
                    $('#Days').val(days);
                }
                else
                    $('#Days').val(days);

            }
        }


        $('#chkhalfday').on("ifChanged", function () {
            debugger;
            var fromDate = $('#FromDt').find('input').val();
            var toDate = $('#ToDt').find('input').val();
            var from = moment(fromDate, 'MM/DD/YYYY');
            var to = moment(toDate, 'MM/DD/YYYY');
            var days = moment.duration(to.diff(from)).asDays() + 1;

            if (fromDate != undefined && fromDate != "" && toDate != undefined && toDate != "") {
                if (days == 1) {
                    if ($('#chkhalfday').prop('checked')) {
                        $('#Days').val(0.5);
                        $('#isChecked').val('on');


                    } else {
                        $('#isChecked').val('off');
                        $('#Days').val(days);
                    }

                }
            }

        });


        $('#frmLeave').validate({
            rules: {
                'FromDate': {
                    required: true
                },
                'ToDate': {
                    required: true
                },
                'Days': {
                    required: true
                },
                'EmployeeId': {
                    required: true
                },
                'LeaveTypeId': {
                    required: true
                },
                'Reason': {
                    required: true

                },
                'Remarks': {
                    required: true

                }
            }
        });

        function clearrec() {
            $('#FromDate').val('');
            $('#ToDate').val('');
            $('#Days').val('');
            $('#EmployeeId').val('');
            $('#LeaveTypeId').val('');
            $('#Reason').val('');
            $('#Remarks').val('');

        }
        //clearrec();

        function SaveEmployeeLeaveForm() {

            if ($('#frmLeave').valid()) {
                $('#btnSave').attr('disabled', 'disabled');
                $('#frmLeave').submit();
            }

        }
    </script>
}
