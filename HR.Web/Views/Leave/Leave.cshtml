@model HR.Web.ViewModels.BranchLeaveVm
@section Styles{
    <style>
        .chkClass {
            position: relative;
            right: 40px;
        }

        .width {
            width: 80%;
        }

        .icheckbox_flat-blue {
            margin-top: 10px;
        }
    </style>
}
@using (Html.BeginForm("Leave", "Leave", FormMethod.Post, new { id = "frmLeave", name = "frmLeave" }))
{
    @Html.HiddenFor(x => x.leave.LeaveId)
    <div class="page">
        <div class="panel panel-default panel-hovered panel-stacked mb10">
            <div class="panel-heading">
                Leave Policy
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default panel-hovered panel-stacked mb10">

                    <div class="panel-body">
                        <div class="row css5">
                            <div class="col-md-8">                             
                                @if (ViewBag.RoleCode == UTILITY.ROLE_SUPERADMIN)
                                {
                                    <label class="col-md-2 control-label">
                                        <span class="pull-right">Branch</span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.DropDownListFor(x => x.otherLeave[0].BranchId,
                                    SelectListItemHelper.Branches(),
                                    "Select Branch",
                                    new { @class = "form-control input-sm", onchange = "GetBranchData(this)" })
                                    </div>
                                }
                                else
                                {
                                   // @Html.HiddenFor(x => x.otherLeave[0].BranchId)
                                }
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>



        <div class="row">
            @for (int i = 0; i < Model.otherLeave.Count; i++)
            {

                <div class="col-md-6">
                    <div class="panel panel-default panel-hovered panel-stacked mb10">
                        <div class="panel-heading">
                            @Model.otherLeave[i].Description
                        </div>
                        @Html.HiddenFor(x => x.otherLeave[i].LeaveId)
                        @Html.HiddenFor(x => x.otherLeave[i].LeaveTypeId)
                        @Html.HiddenFor(x => x.otherLeave[i].BranchId)
                        @Html.HiddenFor(x => x.otherLeave[i].Description)
                        <div class="panel-body">
                            <div class="row css5">
                                <div class="form-group">
                                    <div class="row">
                                        <label class="col-md-4 control-label">
                                            <span class="pull-right">Per Year</span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(x => x.otherLeave[i].LeavesPerYear, new { @class = "form-control numCss input-sm", onblur = "calcCasualLeave(this," + i + ")" })
                                        </div>
                                    </div>
                                    <div class="row css5">
                                        <label class="col-md-4 control-label">
                                            <span class="pull-right">Per Month</span>
                                        </label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(x => x.otherLeave[i].LeavesPerMonth,
     new { @class = "form-control decimalCss input-sm", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (Model.otherLeave[i].IsCarryForward)
                            {
                                <div class="row css5">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">
                                            <span class="pull-right">Carry Forward</span>
                                        </label>
                                        <div class="col-md-2">
                                            @Html.CheckBoxFor(x => x.otherLeave[i].IsCarryForward, new { @class = "form-control " })
                                        </div>
                                        <div class="col-md-3 chkClass">
                                            @Html.TextBoxFor(x => x.otherLeave[i].CarryForward,
                                    new { @class = "form-control decimalCss input-sm" })
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

            }
        </div>

        <div class="row">
            <div class="col-md-12">
                <button class="btn btn-primary btn-sm" type="button" onclick="SaveLeave()"><i class="fa fa-floppy-o" aria-hidden="true"></i>Save</button>
            </div>
        </div>
    </div>

}

@using (Html.BeginForm("GetLeaves", "Leave", FormMethod.Post, new { id = "frmGetLeaves", name = "frmGetLeaves" }))
{
    <input type="hidden" id="hdnBranchId" name="leave.BranchId" />
}


@section Scripts{
    <script type="text/javascript">
        $(function () {
            $('#li_Leave').addClass('open');
            $('#li_Leavepolicy').addClass('active');
            $('#li_empdir').addClass('active');

            $.validator.addMethod("ValidatePaidLeave", function () {
                if ((parseInt($('#PaidLeavesPerMonth').val()) == 0 && parseInt($('#PaidLeavesPerYear').val()) == 0) ||
                    parseInt($('#PaidLeavesPerMonth').val()) < parseInt($('#PaidLeavesPerYear').val())) {
                    return true;
                } else
                    return false;
            }, "Please Paid Leaves Per Month should be less than Paid Leaves Per Year ");

            $.validator.addMethod("ValidateSickLeave", function () {
                if ((parseInt($('#SickLeavesPerMonth').val()) == 0 && parseInt($('#SickLeavesPerYear').val()) == 0)
                    || parseInt($('#SickLeavesPerMonth').val()) < parseInt($('#SickLeavesPerYear').val())) {
                    return true;
                } else
                    return false;
            }, "Please Sick Leaves Per Month should be less than Sick Leaves Per Year ");

            $.validator.addMethod("ValidateCasualLeave", function () {
                if ((parseInt($('#CasualLeavesPerMonth').val()) == 0 && parseInt($('#CasualLeavesPerYear').val()) == 0)
                    || parseInt($('#CasualLeavesPerMonth').val()) < parseInt($('#CasualLeavesPerYear').val())) {
                    return true;
                } else
                    return false;
            }, "Please Casual Leaves Per Month should be less than Casual Leaves Per Year ");

            $.validator.addMethod("CarryForwardPaidLeave", function () {
                if ((parseInt($('#CarryForwardPerYear').val()) == 0 && parseInt($('#PaidLeavesPerYear').val()) == 0)
                    || parseInt($('#CarryForwardPerYear').val()) < parseInt($('#PaidLeavesPerYear').val())) {
                    return true;
                } else
                    return false;
            }, "Please CarryForward Leaves Per Month should be less than Paid Leaves Per Year ");


            $.validator.addMethod("CarryForwardSickLeave", function () {
                if ((parseInt($('#CarryForwardSickLeaves').val()) == 0 && parseInt($('#SickLeavesPerYear').val()) == 0)
                    || parseInt($('#CarryForwardSickLeaves').val()) < parseInt($('#SickLeavesPerYear').val())) {
                    return true;
                } else
                    return false;
            }, "Please CarryForward Leaves Per Month should be less than Sick Leaves Per Year ");

            //$.validator.addMethod("CarryForwardCasualLeave", function () {
            //    if (parseInt($('#CarryForwardSickLeaves').val()) < parseInt($('#SickLeavesPerYear').val())) {
            //        return true;
            //    } else
            //        return false;
            //}, "Please CarryForward Leaves Per Month should be less than Sick Leaves Per Year ");

            $('#FridaySession').hide();
            $('#SaturdaySession').hide();
            $('#SundaySession').hide();
            $('#IsFridayHalfDaySession').hide();
            $('#IsSaturdayHalfDaySession').hide();
            $('#IsSundayHalfDaySession').hide();

            $('#weekendPolicy_Friday').trigger('ifChanged');
            $('#weekendPolicy_Saturday').trigger('ifChanged');
            $('#weekendPolicy_Sunday').trigger('ifChanged');
            $('#weekendPolicy_IsFridayHalfDay').trigger('ifChanged');
            $('#weekendPolicy_IsSaturdayHalfDay').trigger('ifChanged');
            $('#weekendPolicy_IsSundayHalfDay').trigger('ifChanged');

            //$(".chkCss").trigger('ifChanged');
        });

        $('#weekendPolicy_Friday').on('ifChanged', function () {
            if ($('#weekendPolicy_Friday').prop('checked')) {
                $('#IsFridayHalfDaySession').show();
                $('#FridaySession').show();
                //  $('.icheckbox_flat-blue').addClass('checked');
                // $('#weekendPolicy_IsFridayHalfDay').attr('checked', 'checked');
            }
            else {
                $('#IsFridayHalfDaySession').hide();
                $('#FridaySession').hide();
                // $('#weekendPolicy_IsFridayHalfDay').removeAttr('checked');
                //$('.icheckbox_flat-blue hover').removeClass('checked');
            }
        });

        $('#weekendPolicy_Saturday').on('ifChanged', function () {
            if ($('#weekendPolicy_Saturday').prop('checked')) {
                $('#IsSaturdayHalfDaySession').show();
                $('#SaturdaySession').show();
            }
            else {
                $('#IsSaturdayHalfDaySession').hide();
                $('#SaturdaySession').hide();
            }
        });


        $('#weekendPolicy_Sunday').on('ifChanged', function () {
            if ($('#weekendPolicy_Sunday').prop('checked')) {
                $('#IsSundayHalfDaySession').show();
                $('#SundaySession').show();
            }
            else {
                $('#IsSundayHalfDaySession').hide();
                $('#SundaySession').hide();
            }
        });

        $('#weekendPolicy_IsFridayHalfDay').on('ifChanged', function () {
            if ($('#weekendPolicy_IsFridayHalfDay').prop('checked')) {
                $('#FridaySession').show();
            }
            else
                $('#FridaySession').hide();
        });

        $('#weekendPolicy_IsSaturdayHalfDay').on('ifChanged', function () {
            if ($('#weekendPolicy_IsSaturdayHalfDay').prop('checked')) {
                $('#SaturdaySession').show();
            }
            else
                $('#SaturdaySession').hide();
        });

        $('#weekendPolicy_IsSundayHalfDay').on('ifChanged', function () {
            if ($('#weekendPolicy_IsSundayHalfDay').prop('checked')) {
                $('#SundaySession').show();
            }
            else
                $('#SundaySession').hide();
        });


        function calcLeavePerMonth(obj) {
            var peryear = $('#' + obj.id).val();
            var PaidLeavesPerMonth = (peryear / 12).toFixed(2);
            $('#leave_PaidLeavesPerMonth').val(PaidLeavesPerMonth);
        }
        function calcSickLeave(obj) {
            var peryear = $('#' + obj.id).val();
            var PaidLeavesPerMonth = (peryear / 12).toFixed(2);
            $('#leave_SickLeavesPerMonth').val(PaidLeavesPerMonth);
        }

        function calcCasualLeave(obj,i) {
            var peryear = $('#' + obj.id).val();
            var PaidLeavesPerMonth = (peryear / 12).toFixed(2);
            $('#otherLeave_'+ i +'__LeavesPerMonth').val(PaidLeavesPerMonth);
        }


        function SaveLeave() {
            $('#frmLeave').validate({
                rules: {
                    CountryCode: {
                        required: true
                    },
                    PaidLeavesPerYear: {
                        required: true,
                        ValidatePaidLeave: true
                    },
                    PaidLeavesPerMonth: {
                        required: true,
                        ValidatePaidLeave: true
                    },
                    CarryForwardPerYear: {
                        required: true,
                        CarryForwardPaidLeave: true
                    },
                    SickLeavesPerYear: {
                        required: true,
                        ValidateSickLeave: true
                    },
                    SickLeavesPerMonth: {
                        required: true,
                        ValidateSickLeave: true
                    },
                    CarryForwardSickLeaves: {
                        required: true,
                        CarryForwardSickLeave: true
                    },
                    CasualLeavesPerYear: {
                        required: true,
                        ValidateCasualLeave: true
                    },
                    CasualLeavesPerMonth: {
                        required: true,
                        ValidateCasualLeave: true
                    }
                }
            });
            if ($('#frmLeave').valid()) {
                $.loader({
                    className: "blue-with-image-2",
                    content: '',
                });
                $('#frmLeave').submit();
            }

        }


        function GetBranchData(el) {

            $('#hdnBranchId').val(el.value);
            $('#frmGetLeaves').submit();
        }

    </script>
}
