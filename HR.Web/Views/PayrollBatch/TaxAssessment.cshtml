@using Newtonsoft.Json;
@model HR.Web.ViewModels.TaxAssessmentVm


@section Styles{
    <style>
        #error {
            display: none;
            color: Red;
        }

        .rating-percentage {
            display: inline;
            line-height: 2.5;
        }

        .form-control {
            display: initial !important;
        }

        @@media only screen and (min-width: 1200px) {
            .custom-btn {
                position: relative;
                right: 95px;
            }
        }
    </style>
}

<div class="page" style="overflow:visible;">

    @using (Html.BeginForm("TaxAssessment", "PayrollBatch", FormMethod.Post, new { id = "frmTaxAssessment", name = "frmTaxAssessment", enctype = "multipart/form-data" }))
    {
        <input type="hidden" id="DetailId" name="DetailId" />
        <input type="hidden" id="addOrDelete" name="addOrDelete" />
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default panel-hovered panel-stacked mb10" style="min-height:800px;">
                    <div class="panel-heading">
                        Tax Assessment Calculations
                    </div>
                    <div class="panel-body">
                        @Html.HiddenFor(x => x.taxassessmentheader.HeaderID)
                        @*@Html.HiddenFor(x => x.claimHeader.EmployeeId)*@
                        <div class="row css5">
                            <label class="col-md-2 control-label">
                                <span class="pull-right">Tax Assessment No.</span>
                            </label>
                            <div class="col-md-2">
                                @Html.TextBoxFor(x => x.taxassessmentheader.AssessmentNo, new { @class = "form-control input-sm uppercase", @readonly = "true" })
                            </div>
                            <label class="col-md-1 control-label">
                                <span class="pull-right">Year</span>
                            </label>
                            <div class="col-md-1">
                                @Html.DropDownListFor(x => x.taxassessmentheader.Year, SelectListItemHelper.GetYears(), new { @class = "form-control input-sm" })
                                @Html.HiddenFor(x => x.taxassessmentheader.Year)
                            </div>
                        </div>
                        <div class="row css5">
                            <label class="col-md-2 control-label">
                                <span class="pull-right">Social Security Contribution</span>
                            </label>
                            <div class="col-md-1 col-xs-11">
                                @Html.TextBoxFor(x => x.taxassessmentheader.SocialContributionRate, new { @class = "form-control input-sm decimalCss pull-left", required = "required" })
                            </div>
                            <div class="col-md-1 col-xs-1">
                                <span class="pull-left rating-percentage"><b>%</b></span>
                            </div>

                            <label class="col-md-1 control-label">
                                <span class="pull-right">Max. Amount</span>
                            </label>
                            <div class="col-md-1">
                                @Html.TextBoxFor(x => x.taxassessmentheader.MaximumAmount, new { @class = "form-control input-sm decimalCss", required = "required" })
                            </div>
                        </div>
                        <div>
                            <button type="button" class="btn btn-info btn-sm pull-right" onclick="SaveAndGetData()">
                                <i class="fa fa-plus"></i><span>Add</span>
                            </button>
                            <div class="clearfix">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="table-responsive t-height">
                                            <table class="table table-condensed table-bordered" style="margin-top:10px">
                                                <thead>
                                                    <tr style="background:#3f51b5;">
                                                        <th style="background:#3f51b5; color:#fff;">Salary From</th>
                                                        <th style="background:#3f51b5; color:#fff;">Salary To</th>
                                                        <th style="background:#3f51b5; color:#fff;">Rate</th>
                                                        <th style="background:#3f51b5; color:#fff;">#Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @if (Model.TaxAssessmentDetailList != null && Model.TaxAssessmentDetailList.Count > 0)
                                                    {
                                                        for (int i = 0; i < Model.TaxAssessmentDetailList.Count; i++)
                                                        {
                                                            <tr id="tr_@i" class="cssAirfareLength">
                                                                <td>
                                                                    @Html.HiddenFor(x => x.TaxAssessmentDetailList[i].ID)
                                                                    @Html.HiddenFor(x => x.TaxAssessmentDetailList[i].ID)

                                                                    @Html.TextBoxFor(x => x.TaxAssessmentDetailList[i].SalaryFrom, new
                                                                    {
                                                                        @class = "form-control input-sm decimalCss",
                                                                        required = "required",
                                                                        style = "width:100px;",
                                                                        data_index = i
                                                                    })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => x.TaxAssessmentDetailList[i].SalaryTo, new
                                                                    {
                                                                        @class = "form-control input-sm decimalCss",
                                                                        required = "required",
                                                                        style = "width:100px;",
                                                                        data_index = i
                                                                    })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => x.TaxAssessmentDetailList[i].Rate, new
                                                                    {
                                                                        @class = "form-control  input-sm decimalCss",
                                                                        required = "required",
                                                                        style = "width:100px;",
                                                                        data_index = i
                                                                    })
                                                                </td>
                                                                <td>
                                                                    <button type="button" class="btn btn-xs btn-danger btn-sm waves-effect" formnovalidate="formnovalidate"
                                                                            style="padding-left: 5px;margin-left: 6px;"
                                                                            onclick="deleteTaxAssessmentDetail(@Model.TaxAssessmentDetailList[i].ID,@i)">
                                                                        <i class="fa fa-trash-o" style="padding-left: 5px;"></i>
                                                                    </button>
                                                                </td>
                                                            </tr>
                                                        }
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mr-top">
                            <div class="col-md-12">
                                <button type="button" class="btn btn-primary btn-sm"
                                        onclick="SaveTaxAssessment()">
                                    <i class="fa fa-floppy-o"></i>
                                    Save
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    @using (Html.BeginForm("DeleteTaxAssessment", "PayrollBatch", FormMethod.Post, new { @id = "frmTaxAssessmentDelete", name = "frmTaxAssessmentDelete" }))
    {
        <input type="hidden" id="detailId" name="detailId" />
        <input type="hidden" id="headerId" name="headerId" />

    }
    @using (Html.BeginForm("SubmitTaxAssessment", "PayrollBatch", FormMethod.Post, new { id = "frmsubmit", name = "frmsubmit" }))
    {
        <input type="hidden" id="travelid" name="travelid" />
    }


</div>

@section Scripts{

    <script type="text/javascript">

        $('#frmTaxAssessment').validate({
            ignore: ""
        });

        function SaveAndGetData(category, tabId) {
            debugger;
            if ($('#frmTaxAssessment').valid()) {
                $('#frmTaxAssessment').submit();
            }
        }

        function SaveTaxAssessment() {
            debugger;
            if ($('#frmTaxAssessment').valid()) {
                $('#frmTaxAssessment').attr('action', '@Url.Content("~/PayrollBatch/SaveTaxAssessment")');
                $('#frmTaxAssessment').submit();
                swal({
                    title: "Saved Successfully",
                    text: "",
                    closeOnConfirm: true,
                    confirmButtonText: "Ok",
                    confirmButtonClass: "btn-primary",
                    timer: 5000
                },
                    function () {
                        $.loader({
                            className: "blue-with-image-2",
                            content: '',
                        });
                    })
            }
        }


        $('#frmTaxAssessment').validate({
            rules: {
                //'taxassessmentheader.AssessmentNo': {
                //    required: true
                //},
                'taxassessmentheader.Year': {
                    required: true
                },
                'taxassessmentheader.SocialContributionRate': {
                    required: true
                },
                'taxassessmentheader.MaximumAmount': {
                    required: true
                },
                //'taxassessmentdetail.SalaryFrom': {
                //    required: true
                //},
                //'taxassessmentdetail.SalaryTo': {
                //    required: true
                //},
                //'taxassessmentdetail.Rate': {
                //    required: true
                //}
            }
        });

        function deleteTaxAssessmentDetail(detailId, index) {

            $('#addOrDelete').val(index);
            $('#DetailId').val(detailId);
            $('#TaxAssessmentDetailList_' + index + '__SalaryFrom').removeAttr('required');
            $('#TaxAssessmentDetailList_' + index + '__SalaryTo').removeAttr('required');
            $('#TaxAssessmentDetailList_' + index + '__Rate').removeAttr('required');
            $('#frmTaxAssessment').attr({ 'action': '@Url.Content("~/PayrollBatch/TaxAssessment")', 'novalidate': 'novalidate' });
            if ($('#frmTaxAssessment').valid())
                $('#frmTaxAssessment').submit();
        }
    </script>
}






